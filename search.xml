<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Qt Troubleshoot （一）</title>
    <url>/2024/12/30/hexo10/</url>
    <content><![CDATA[<h1 id="建立这个分类的目的"><a href="#建立这个分类的目的" class="headerlink" title="建立这个分类的目的"></a>建立这个分类的目的</h1><p>自从开始用Qt来编写应用程序之后，我发现应用的开发变得方便了许多。当然，图中难免遇到问题。我会在这个分类不断记录我遇到的问题以及我的解决过程。</p>
<h1 id="1-QLabel自动换行"><a href="#1-QLabel自动换行" class="headerlink" title="1.QLabel自动换行"></a>1.<code>QLabel</code>自动换行</h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>我在使用<code>QtWidgets.QLabel</code>时，常常需要一个自动换行功能。查阅Qt官网，发现<code>QLabel</code>有个<code>setWordWrap()</code>方法。但是，有时即使设置了为<code>True</code>,它任然没有换行。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> *</span><br><span class="line">app=QApplication([])</span><br><span class="line">window=QWidget()</span><br><span class="line">label=QLabel(<span class="string">&#x27;LongWordTestLongWordTestLongWordTestLongWordTestLongWordTest&#x27;</span>,window)</span><br><span class="line">label.setWordWrap(<span class="literal">True</span>)</span><br><span class="line">window.resize(<span class="number">500</span>,<span class="number">500</span>)</span><br><span class="line">window.show()</span><br><span class="line">app.<span class="built_in">exec</span>()</span><br></pre></td></tr></table></figure>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>这是因为<code>QLabel</code>只会在有空格的地方换行。所以，纯数字和纯字母都会认为是只有一个单词，所以就不会换行了。<br>当然，纯汉字也是会正常换行的。</p>
<h1 id="2-自定义类继承QWidget不能设置样式"><a href="#2-自定义类继承QWidget不能设置样式" class="headerlink" title="2.自定义类继承QWidget不能设置样式"></a>2.自定义类继承<code>QWidget</code>不能设置样式</h1><h2 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h2><p>一次，我利用<code>QWidget</code>来制作一个自己的窗口类，让它的对象实例化后自动显示。这个实现也很简单，这是一个简化的例子：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CustomWindow</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        <span class="variable language_">self</span>.show()</span><br><span class="line">app=QApplication([])</span><br><span class="line">window=CustomWindow()</span><br><span class="line">window.resize(<span class="number">500</span>,<span class="number">500</span>)</span><br><span class="line">app.<span class="built_in">exec</span>()</span><br></pre></td></tr></table></figure></p>
<p>后来，我有想设置一个初始的样式，把它的背景色设成绿色，在<code>__init__(self)</code>里面加了一行：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">self</span>.setStyleSheet(<span class="string">&#x27;background-color: green;&#x27;</span>)</span><br></pre></td></tr></table></figure></p>
<p>结果竟然是，<code>QWidget</code>还是那个<code>QWidget</code>，背景还是那个初始颜色，根本不是绿色</p>
<h2 id="解决-1"><a href="#解决-1" class="headerlink" title="解决"></a>解决</h2><p>经过了研究，我发现可能是有时<code>QWidget</code>的子类是不会自动设样式表的（在一个复杂的项目中我遇到了此问题，当我尝试简化时，这个问题消失了，但是这个问题一定存在）。<br>有两种解决方法。</p>
<h3 id="第一种：改变父类"><a href="#第一种：改变父类" class="headerlink" title="第一种：改变父类"></a>第一种：改变父类</h3><p><code>QWidget</code>可能有问题，但是<code>QFrame</code>不会有问题。改成继承<code>QFrame</code>就可以了。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CustomWindow</span>(<span class="title class_ inherited__">QFrame</span>):</span><br></pre></td></tr></table></figure></p>
<h3 id="第二种：设置控件属性"><a href="#第二种：设置控件属性" class="headerlink" title="第二种：设置控件属性"></a>第二种：设置控件属性</h3><p>这个问题的根本就是<code>QWidget</code>的背景样式没有启用哦。可以设置控件样式（<code>QWidget.setAttribute()</code>）来启用。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">window.setAttribute(Qt.WidgetAttribute.WA_StyledBackground,<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></p>
<h1 id="3-QWidget-setStyleSheet-覆盖之前的样式表"><a href="#3-QWidget-setStyleSheet-覆盖之前的样式表" class="headerlink" title="3.QWidget.setStyleSheet()覆盖之前的样式表"></a>3.<code>QWidget.setStyleSheet()</code>覆盖之前的样式表</h1><h2 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h2><p>刚才说了，<code>setStyleSheet()</code>方法可以设设置<code>QWidget</code>的样式表。然而，每次设置之后都会覆盖原有的。</p>
<h2 id="解决-2"><a href="#解决-2" class="headerlink" title="解决"></a>解决</h2><p>解决的方法不是很复杂，可以自己定义一个类，设置一个<code>styleSheets</code>属性（和<code>QWidget</code>原有的<code>styleSheet()</code>方法区分开）<br>在自己写一个<code>addStyleSheet()</code>方法来维护它。<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">LingmoFrame</span>(<span class="title class_ inherited__">QFrame</span>):</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,parent=<span class="literal">None</span>,show=<span class="literal">True</span></span>):</span><br><span class="line">		<span class="built_in">super</span>().__init__(parent)</span><br><span class="line">		<span class="variable language_">self</span>.timer=QTimer()</span><br><span class="line">		<span class="variable language_">self</span>.timer.timeout.connect(<span class="variable language_">self</span>.updateEvent)</span><br><span class="line">		<span class="variable language_">self</span>.timer.timeout.connect(<span class="variable language_">self</span>.__update__)</span><br><span class="line">		<span class="variable language_">self</span>.timer.start(timerDelay)</span><br><span class="line">		<span class="keyword">if</span> show:</span><br><span class="line">			<span class="variable language_">self</span>.show()</span><br><span class="line">		<span class="variable language_">self</span>.styleSheets=&#123;&#125;</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">__update__</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="variable language_">self</span>.update()</span><br><span class="line">		styleSheetString=<span class="string">&#x27;&#x27;</span></span><br><span class="line">		<span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable language_">self</span>.styleSheets:</span><br><span class="line">			styleSheetString+=i+<span class="string">&#x27;: &#x27;</span>+<span class="variable language_">self</span>.styleSheets[i]+<span class="string">&#x27;;&#x27;</span></span><br><span class="line">		<span class="variable language_">self</span>.setStyleSheet(styleSheetString)</span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">updateEvent</span>(<span class="params">self</span>):</span><br><span class="line">		<span class="keyword">pass</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">addStyleSheet</span>(<span class="params">self,name,style</span>):</span><br><span class="line">		<span class="variable language_">self</span>.styleSheets[name]=<span class="built_in">str</span>(style)</span><br></pre></td></tr></table></figure></p>
<p>这个方法还贴心地将<code>style</code>转换成字符串类型，这样每次数值就不需要强转了。</p>
<h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>篇幅有限，最近的问题也没收集多少，所以这篇文章到这里就结束了。<br>2024年还有两天（算今天）就要过去，2025年就要来了。祝大家元旦快乐！Bye！</p>
]]></content>
      <categories>
        <category>Qt Troubleshoot</category>
      </categories>
      <tags>
        <tag>Qt</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客0氪建站记录（上）</title>
    <url>/2024/08/23/hexo1/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>大家好，我叫Admibrill，<del>建站十多天了，没有发过一次文章</del>。</p>
<p>第一篇文章，我决定记录一下我个人的建站历程。</p>
<h2 id="各种环境依赖的安装"><a href="#各种环境依赖的安装" class="headerlink" title="各种环境依赖的安装"></a>各种环境依赖的安装</h2><p>跟着<a href="https://www.fomal.cc/posts/e593433d.html">Fomal大佬的教程</a>，我开始了建站。 </p>
<h3 id="Github账号和仓库"><a href="#Github账号和仓库" class="headerlink" title="Github账号和仓库"></a>Github账号和仓库</h3><p>我本来就有一个github的账号，于是建了个仓库叫<code>admibrill.github.io</code>。</p>
<p>使用<code>Github Pages</code>的源文件仓库要命名为<code>&lt;username&gt;.github.io</code>。</p>
<p>这代表网站源码要通过github托管，会使用<code>Github Pages</code>部署，别人可以通过<code>https://admibrill.github.io</code>来访问我的网站。</p>
<h3 id="本地源文件存储文件夹"><a href="#本地源文件存储文件夹" class="headerlink" title="本地源文件存储文件夹"></a>本地源文件存储文件夹</h3><p>在你喜欢的位置，建一个文件夹，起一个喜欢的名字（建议不要有汉字）。</p>
<p>不同的人起的名字不同，这个文件夹就用<code>[blogroot]</code>来指代。</p>
<h3 id="node-js和git的安装"><a href="#node-js和git的安装" class="headerlink" title="node.js和git的安装"></a>node.js和git的安装</h3><p><a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p>
<p><a href="https://git-scm.com/downloads">Git - Downloads (git-scm.com)</a></p>
<p>下载安装之后，打开<code>[blogroot]</code>，右键单击空白处，即可发现菜单中多出来了<code>Git Bash Here</code>一项</p>
<p> <img src="https://image.m-c.top/?/images/2024/08/23/NuXMqVMoUZ/1111.png" alt=""> </p>
<p>打开它，然后后面的很多命令都使用bash输入。</p>
<h3 id="Hexo的安装"><a href="#Hexo的安装" class="headerlink" title="Hexo的安装"></a>Hexo的安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>然后，因为我是第一次使用，配置用户名和邮箱</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;&lt;your username&gt;&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;&lt;your email&gt;&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="连接至github"><a href="#连接至github" class="headerlink" title="连接至github"></a>连接至github</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;&lt;your email&gt;&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="Hexo，启动！！！"><a href="#Hexo，启动！！！" class="headerlink" title="Hexo，启动！！！"></a>Hexo，启动！！！</h2><h3 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h3><p>打开<code>[blogroot]</code>,右键选择‘<code>Git bash here</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>这时，我们的<code>[blogroot]</code>中缓缓出现了很多文件。</p>
<p>Hexo会自动安装依赖包。</p>
<p>等待程序执行完成，命令行中会出现一句<code>Start blogging with Hexo!</code>就代表Hexo初始化成功了。</p>
<h3 id="安装挂载依赖包"><a href="#安装挂载依赖包" class="headerlink" title="安装挂载依赖包"></a>安装挂载依赖包</h3><p>有一个包Hexo不会自动安装，叫做<code>hexo-deployer-git</code>。</p>
<p>我们就要使用npm的安装命令安装它(以后安装一些包通用)。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>等待运行完成就好了。</p>
<h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>打开<code>[blogroot]</code>目录下的<code>_config.yml</code>文件，修改以下设置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">https://&lt;your</span> <span class="string">username&gt;.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br></pre></td></tr></table></figure>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">	<span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">	<span class="attr">repository:</span> <span class="string">https://github.com/&lt;your</span> <span class="string">username&gt;/&lt;your</span> <span class="string">username&gt;.github.io.git</span></span><br></pre></td></tr></table></figure>
<h3 id="挂载博客到Github-Pages"><a href="#挂载博客到Github-Pages" class="headerlink" title="挂载博客到Github Pages"></a>挂载博客到Github Pages</h3><p>常用运行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl</span><br></pre></td></tr></table></figure>
<p>这个命令用于清除之前生成的静态文件。第一次没有生成，所以不用</p>
<p>后面只要使用了<code>hexo g</code>就一定要使用，因为<code>hexo g</code>不会把之前生成过的文件再生成一遍，在<code>hexo g</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>
<p>这样，我们就把网站上传了，如果你想在本地预览，就运行如下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>这些就是常用命令。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我通过这样的方式建立了这样的一个个人空间。</p>
<p>我知道网上有很多这样的教程，但是这是我的个人经验，总体上还是能算原创的，再次感谢<a href="https://www.fomal.cc/posts/e593433d.html">Fomal大佬的教程</a>。</p>
<p>下一篇，我讲讲关于博客的美化。886！</p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>建站</tag>
        <tag>免费</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客0氪建站记录（中）</title>
    <url>/2024/08/25/hexo2/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>上次，我们完成了Hexo框架的搭建。这次，我讲如何美化博客。</p>
<p>一打开博客页面，是一个单调的LandScape主题，没有首页，还有一篇hello world的英文文章。</p>
<p>想自己装饰那么多肯定不容易，于是我们就要去<a href="https://hexo.io/zh-cn">hexo官网</a>来选择一个好看的主题来装饰。</p>
<p>主题就是一个模版，有很多选项，这就是主题的配置，可以自己来设置。</p>
<p>看了一些教程，也改了很多，有一小部分是自己改的。</p>
<p>我使用的<a href="https://github.com/anzhiyu-c/hexo-theme-anzhiyu">安知鱼</a>主题，是一款可用度较高的主题，支持许多功能，推荐使用。</p>
<h2 id="启动！"><a href="#启动！" class="headerlink" title="启动！"></a>启动！</h2><p>众所周知，静态网页是由三门语言编写的：</p>
<ul>
<li>HTML:超文本标记语言，有许多标签，有不同的功能，可以生成一个网页框架。</li>
<li>CSS：层叠样式表，用于给框架加上华丽的样式。</li>
<li>JS：java网页脚本。用于交互。</li>
</ul>
<p>而博客魔改的重点就在CSS和JS上。</p>
<p>博客有很多魔改都是看的<a href="www.fomal.cc">Fomal大佬</a>整理的教程，就把采纳了的和自己改的写在这里。</p>
<p>安知鱼主题的末尾处有一个<code>inject:</code>配置项，这里可以用于在网页头和尾引入外链css和js文件。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span> </span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  	<span class="string">...</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">  	<span class="string">...</span></span><br></pre></td></tr></table></figure>
<p>CSS文件一般放在head内，因为样式需要再预加载完成前渲染，这样就可以给让网页访问者更好的体验。</p>
<p>而JS一般放在bottom，因为JS时常需要获取HTML中的元素，如果在head就引入，执行，那么就有可能造成元素获取不到，返回了null，然这个js脚本执行中止。</p>
<h2 id="魔改开始！！！"><a href="#魔改开始！！！" class="headerlink" title="魔改开始！！！"></a>魔改开始！！！</h2><p><del>从这里开始，有部分内容都是链接</del></p>
<h3 id="黑夜霓虹灯、星空和流行特效重构"><a href="#黑夜霓虹灯、星空和流行特效重构" class="headerlink" title="黑夜霓虹灯、星空和流行特效重构"></a>黑夜霓虹灯、星空和流行特效重构</h3><p><a href="https://www.fomal.cc/posts/eec9786.html">Hexo博客魔改教程总结(一) | Fomalhaut🥝</a></p>
<h3 id="外挂标签的引入"><a href="#外挂标签的引入" class="headerlink" title="外挂标签的引入"></a>外挂标签的引入</h3><p><a href="https://akilar.top/posts/615e2dec/">Tag Plugins Plus | Akilarの糖果屋</a></p>
<h3 id="鼠标样式"><a href="#鼠标样式" class="headerlink" title="鼠标样式"></a>鼠标样式</h3><p><a href="https://www.fomal.cc/posts/5389e93f.html">Hexo博客魔改教程总结(二)| Fomalhaut🥝</a></p>
<h3 id="右下角工具按钮显示阅读进度"><a href="#右下角工具按钮显示阅读进度" class="headerlink" title="右下角工具按钮显示阅读进度"></a>右下角工具按钮显示阅读进度</h3><p><a href="https://blog.leonus.cn/2022/percent.html">返回顶部显示网页阅读进度 | Leonus</a></p>
<h3 id="Vue-Element样式弹窗"><a href="#Vue-Element样式弹窗" class="headerlink" title="Vue+Element样式弹窗"></a>Vue+Element样式弹窗</h3><p><a href="https://www.fomal.cc/posts/2d7ac914.html">Hexo博客魔改教程总结(三) | Fomalhaut🥝</a></p>
<h3 id="文章统计图"><a href="#文章统计图" class="headerlink" title="文章统计图"></a>文章统计图</h3><p><a href="https://blog.eurkon.com/post/1213ef82.html">Hexo 博客文章统计图 | Eurkon</a></p>
<h3 id="公告栏欢迎信息"><a href="#公告栏欢迎信息" class="headerlink" title="公告栏欢迎信息"></a>公告栏欢迎信息</h3><p><a href="https://ichika.cc/Article/beautiful_IPLocation/">给博客添加腾讯地图定位并制作个性欢迎 | ichikaの小窝</a></p>
<p>你以为公告栏欢迎信息这就结束了?NO!NO!NO!</p>
<p>由于<a href="https://lbs.qq.com/">腾讯定位服务</a>实在太抠门，每天就让一次请求，于是我找来了<a href="ip-api.com">ip-api.com</a>（主打一个0氪）</p>
<p>之前的<del><code>txmap.js</code></del>改成这样：感谢ichika提供的代码（因为换了API，响应结果的结构都变了，于是有很多地方要改，于是全粘进来）</p>
<p>（是不是应该换个文件名？）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//get请求</span></span><br><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://ip-api.com/json/?fields=status,message,continent,continentCode,country,countryCode,region,regionName,city,district,zip,lat,lon,timezone,offset,currency,isp,org,as,asname,reverse,mobile,proxy,hosting,query&amp;lang=zh-CN&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        <span class="attr">callback</span>: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">dataType</span>: <span class="string">&#x27;jsonp&#x27;</span>,</span><br><span class="line">    <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">        ipLoacation = res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getDistance</span>(<span class="params">e1, n1, e2, n2</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> R = <span class="number">6371</span></span><br><span class="line">    <span class="keyword">const</span> &#123; sin, cos, asin, <span class="variable constant_">PI</span>, hypot &#125; = <span class="title class_">Math</span></span><br><span class="line">    <span class="keyword">let</span> <span class="title function_">getPoint</span> = (<span class="params">e, n</span>) =&gt; &#123;</span><br><span class="line">        e *= <span class="variable constant_">PI</span> / <span class="number">180</span></span><br><span class="line">        n *= <span class="variable constant_">PI</span> / <span class="number">180</span></span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">x</span>: <span class="title function_">cos</span>(n) * <span class="title function_">cos</span>(e), <span class="attr">y</span>: <span class="title function_">cos</span>(n) * <span class="title function_">sin</span>(e), <span class="attr">z</span>: <span class="title function_">sin</span>(n) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> a = <span class="title function_">getPoint</span>(e1, n1)</span><br><span class="line">    <span class="keyword">let</span> b = <span class="title function_">getPoint</span>(e2, n2)</span><br><span class="line">    <span class="keyword">let</span> c = <span class="title function_">hypot</span>(a.<span class="property">x</span> - b.<span class="property">x</span>, a.<span class="property">y</span> - b.<span class="property">y</span>, a.<span class="property">z</span> - b.<span class="property">z</span>)</span><br><span class="line">    <span class="keyword">let</span> r = <span class="title function_">asin</span>(c / <span class="number">2</span>) * <span class="number">2</span> * R</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">round</span>(r*<span class="number">1000</span>)/<span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showWelcome</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> dist = <span class="title function_">getDistance</span>(<span class="number">114.337006</span>, <span class="number">30.525186</span>, ipLoacation.<span class="property">lon</span>, ipLoacation.<span class="property">lat</span>); <span class="comment">//这里换成自己的经纬度</span></span><br><span class="line">    <span class="keyword">let</span> pos = ipLoacation.<span class="property">country</span>;</span><br><span class="line">    <span class="keyword">let</span> ip;</span><br><span class="line">    <span class="keyword">let</span> posdesc;</span><br><span class="line">    <span class="comment">//根据国家、省份、城市信息自定义欢迎语</span></span><br><span class="line">    <span class="keyword">switch</span> (ipLoacation.<span class="property">country</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;日本&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;よろしく，一起去看樱花吗&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;美国&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;Let us live in peace!&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;英国&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;想同你一起夜乘伦敦眼&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;俄罗斯&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;干了这瓶伏特加！&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;法国&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;C&#x27;est La Vie&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;德国&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;Die Zeit verging im Fluge.&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;澳大利亚&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;一起去大堡礁吧！&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;加拿大&quot;</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;拾起一片枫叶赠予你&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;中国&quot;</span>:</span><br><span class="line">            pos = ipLoacation.<span class="property">country</span>+ <span class="string">&quot; &quot;</span> +ipLoacation.<span class="property">regionName</span> + <span class="string">&quot; &quot;</span> + ipLoacation.<span class="property">city</span>;</span><br><span class="line">            ip = ipLoacation.<span class="property">query</span>;</span><br><span class="line">            <span class="keyword">switch</span> (ipLoacation.<span class="property">regionName</span>) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;北京&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;北——京——欢迎你~~~&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;天津&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;讲段相声吧。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;河北省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;山西省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;展开坐具长三尺，已占山河五百余。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;内蒙古自治区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;天苍苍，野茫茫，风吹草低见牛羊。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;辽宁省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;我想吃烤鸡架！&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;吉林省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;状元阁就是东北烧烤之王。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;黑龙江省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;很喜欢哈尔滨大剧院。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;上海市&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;众所周知，中国只有两个城市。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;江苏省&quot;</span>:</span><br><span class="line">                    <span class="keyword">switch</span> (ipLoacation.<span class="property">city</span>) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;南京&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;这是我挺想去的城市啦。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;苏州&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;上有天堂，下有苏杭。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="attr">default</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;散装是必须要散装的。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;浙江省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;东风渐绿西湖柳，雁已还人未南归。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;河南省&quot;</span>:</span><br><span class="line">                    <span class="keyword">switch</span> (ipLoacation.<span class="property">city</span>) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;郑州&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;豫州之域，天地之中。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;南阳&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;臣本布衣，躬耕于南阳。此南阳非彼南阳！&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;驻马店&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;峰峰有奇石，石石挟仙气。嵖岈山的花很美哦！&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;开封&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;刚正不阿包青天。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">&quot;洛阳&quot;</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;洛阳牡丹甲天下。&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        <span class="attr">default</span>:</span><br><span class="line">                            posdesc = <span class="string">&quot;可否带我品尝河南烩面啦？&quot;</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;安徽省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;蚌埠住了，芜湖起飞。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;福建省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;井邑白云间，岩城远带山。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;江西省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;落霞与孤鹜齐飞，秋水共长天一色。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;山东省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;遥望齐州九点烟，一泓海水杯中泻。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;湖北省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;来碗热干面！&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;湖南省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;74751，长沙斯塔克。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;广东省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;老板来两斤福建人。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;广西壮族自治区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;桂林山水甲天下。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;海南省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;朝观日出逐白浪，夕看云起收霞光。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;四川省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;康康川妹子。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;贵州省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;茅台，学生，再塞200。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;云南省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;玉龙飞舞云缠绕，万仞冰川直耸天。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;西藏自治区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;躺在茫茫草原上，仰望蓝天。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;陕西省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;来份臊子面加馍。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;甘肃省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;羌笛何须怨杨柳，春风不度玉门关。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;青海省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;牛肉干和老酸奶都好好吃。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;宁夏回族自治区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;大漠孤烟直，长河落日圆。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;新疆维吾尔自治区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;驼铃古道丝绸路，胡马犹闻唐汉风。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;台湾省&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;我在这头，大陆在那头。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;香港特别行政区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;永定贼有残留地鬼嚎，迎击光非岁玉。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&quot;澳门特别行政区&quot;</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;性感荷官，在线发牌。&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="attr">default</span>:</span><br><span class="line">                    posdesc = <span class="string">&quot;带我去你的城市逛逛吧！&quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="attr">default</span>:</span><br><span class="line">            posdesc = <span class="string">&quot;带我去你的国家逛逛吧。Show me around your country.&quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据本地时间切换欢迎语</span></span><br><span class="line">    <span class="keyword">let</span> timeChange;</span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">    <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">5</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">11</span>) timeChange = <span class="string">&quot;&lt;span&gt;上午好&lt;/span&gt;，一日之计在于晨！&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">11</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">13</span>) timeChange = <span class="string">&quot;&lt;span&gt;中午好&lt;/span&gt;，该摸鱼吃午饭了。&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">13</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">15</span>) timeChange = <span class="string">&quot;&lt;span&gt;下午好&lt;/span&gt;，懒懒地睡个午觉吧！&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">15</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">16</span>) timeChange = <span class="string">&quot;&lt;span&gt;三点几啦&lt;/span&gt;，一起饮茶呀！&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">16</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">19</span>) timeChange = <span class="string">&quot;&lt;span&gt;夕阳无限好！&lt;/span&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (date.<span class="title function_">getHours</span>() &gt;= <span class="number">19</span> &amp;&amp; date.<span class="title function_">getHours</span>() &lt; <span class="number">24</span>) timeChange = <span class="string">&quot;&lt;span&gt;晚上好&lt;/span&gt;，夜生活嗨起来！&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span> timeChange = <span class="string">&quot;夜深了，早点休息，少熬夜。&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//自定义文本和需要放的位置</span></span><br><span class="line">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;welcome-info&quot;</span>).<span class="property">innerHTML</span> =</span><br><span class="line">            <span class="string">`&lt;b&gt;&lt;center&gt;🎉 欢迎信息 🎉&lt;/center&gt;&amp;emsp;&amp;emsp;欢迎来自 &lt;span style=&quot;color:var(--theme-color)&quot;&gt;<span class="subst">$&#123;pos&#125;</span>&lt;/span&gt; 的小伙伴，<span class="subst">$&#123;timeChange&#125;</span>您现在距离站长约 &lt;span style=&quot;color:var(--theme-color)&quot;&gt;<span class="subst">$&#123;dist&#125;</span>&lt;/span&gt; 公里，当前的IP地址为： &lt;span style=&quot;color:var(--theme-color)&quot;&gt;<span class="subst">$&#123;ip&#125;</span>&lt;/span&gt;， <span class="subst">$&#123;posdesc&#125;</span>&lt;/b&gt;`</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Pjax无法获取#welcome-info元素🙄🙄🙄&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">onload</span> = showWelcome;</span><br><span class="line"><span class="comment">// 如果使用了pjax在加上下面这行代码</span></span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;pjax:complete&#x27;</span>, showWelcome);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="FPS检测（Ariasaka）"><a href="#FPS检测（Ariasaka）" class="headerlink" title="FPS检测（Ariasaka）"></a>FPS检测（Ariasaka）</h3><p><a href="https://blog.yaria.top/posts/670e47f/">博客魔改日记（3） | Ariasakaの小窝 (yaria.top)</a></p>
<h3 id="综合美化窗口"><a href="#综合美化窗口" class="headerlink" title="综合美化窗口"></a>综合美化窗口</h3><p><a href="https://www.fomal.cc/posts/9ac969bb.html">综合美化模块教程 | Fomalhaut🥝</a></p>
<p>Fomal参考了Leonus的教程，但是<del>还是Fomal的更全面</del>，所以用了Fomal的</p>
<p>但是有一个问题，Fomal他使用了自定义图标，按他的导航栏来，安知鱼图标不适配，于是<code>nav.pug</code>下面的部分改成这样：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#menus</span><br><span class="line">      !=partial(&#x27;includes/header/menu_item&#x27;, &#123;&#125;, &#123;cache: true&#125;)</span><br><span class="line">    #nav-right</span><br><span class="line">      if theme.nav.travelling</span><br><span class="line">        .nav-button.only-home#travellings_button(title=&#x27;随机前往一个开往项目网站&#x27;)</span><br><span class="line">          a.site-page(onclick=&#x27;anzhiyu.totraveling()&#x27;, title=&#x27;随机前往一个开往项目网站&#x27;, href=&#x27;javascript:void(0);&#x27;, rel=&#x27;external nofollow&#x27;, data-pjax-state=&#x27;external&#x27;)</span><br><span class="line">            i.anzhiyufont.anzhiyu-icon-train</span><br><span class="line">      .nav-button#randomPost_button</span><br><span class="line">        a.site-page(onclick=&#x27;toRandomPost()&#x27;, title=&#x27;随机前往一个文章&#x27;, href=&#x27;javascript:void(0);&#x27;)</span><br><span class="line">          i.anzhiyufont.anzhiyu-icon-dice</span><br><span class="line">      if (theme.algolia_search.enable || theme.local_search.enable || theme.docsearch.enable)</span><br><span class="line">        div.nav-button#search-button</span><br><span class="line">          a.site-page.social-icon.search(href=&#x27;javascript:void(0);&#x27;, title=&#x27;搜索🔍&#x27; accesskey=&quot;s&quot;)</span><br><span class="line">            i.anzhiyufont.anzhiyu-icon-magnifying-glass</span><br><span class="line">            span=&#x27; &#x27;+_p(&#x27;search.title&#x27;)</span><br><span class="line">          </span><br><span class="line">      //- 美化设置开始</span><br><span class="line">      div.nav-button</span><br><span class="line">        a.meihua.faa-parent.animated-hover(onclick=&quot;toggleWinbox()&quot; title=&quot;美化设置-自定义你的风格&quot; id=&quot;meihua-button&quot; )</span><br><span class="line">          i.anzhiyufont.anzhiyu-icon-pencil</span><br><span class="line">      //- 修改结束</span><br><span class="line">      if theme.centerConsole.enable</span><br><span class="line">        input#center-console(type=&quot;checkbox&quot;)</span><br><span class="line">        label.widget(for=&quot;center-console&quot; title=_p(&quot;中控台&quot;) onclick=&quot;anzhiyu.switchConsole();&quot;)</span><br><span class="line">          i.left</span><br><span class="line">          i.widget.center</span><br><span class="line">          i.widget.right</span><br><span class="line"></span><br><span class="line">      !=partial(&#x27;includes/anzhiyu/console&#x27;, &#123;&#125;, &#123;cache:true&#125;)</span><br><span class="line"></span><br><span class="line">      div.nav-button#nav-totop</span><br><span class="line">        a.totopbtn(href=&#x27;javascript:void(0);&#x27;)</span><br><span class="line">          i.anzhiyufont.anzhiyu-icon-arrow-up</span><br><span class="line">          span#percent(onclick=&quot;anzhiyu.scrollToDest(0,500)&quot;) 0</span><br><span class="line"></span><br><span class="line">      #toggle-menu</span><br><span class="line">        a.site-page(href=&#x27;javascript:void(0);&#x27; title=&quot;切换&quot;)</span><br><span class="line">          i.anzhiyufont.anzhiyu-icon-bars</span><br></pre></td></tr></table></figure>
<h3 id="粒子连线-鼠标交互特效"><a href="#粒子连线-鼠标交互特效" class="headerlink" title="粒子连线+鼠标交互特效"></a>粒子连线+鼠标交互特效</h3><p>首先，感谢<a href="www.ordchaos.com">序炁</a>给的<code>canvas-nest-mouse.min.js</code>（我也不清楚原作者是谁，但是是他给我的）</p>
<p>把它外链引入就可以了，这是JS代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">!<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">o</span>(<span class="params">w, v, i</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> w.<span class="title function_">getAttribute</span>(v) || i</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">j</span>(<span class="params">i</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(i)</span><br><span class="line">    &#125; <span class="keyword">function</span> <span class="title function_">l</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="title function_">j</span>(<span class="string">&quot;script&quot;</span>), w = i.<span class="property">length</span>, v = i[w - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">l</span>: w, <span class="attr">z</span>: <span class="title function_">o</span>(v, <span class="string">&quot;zIndex&quot;</span>, -<span class="number">1</span>), <span class="attr">o</span>: <span class="title function_">o</span>(v, <span class="string">&quot;opacity&quot;</span>, <span class="number">0.5</span>), <span class="attr">c</span>: <span class="title function_">o</span>(v, <span class="string">&quot;color&quot;</span>, <span class="string">&quot;0,0,0&quot;</span>), <span class="attr">n</span>: <span class="title function_">o</span>(v, <span class="string">&quot;count&quot;</span>, <span class="number">500</span>) &#125; <span class="comment">/*经研究，发现count是粒子的数量，不要调太多，不然会粒子泛滥*/</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">k</span>(<span class="params"></span>) &#123;</span><br><span class="line">        r = u.<span class="property">width</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientWidth</span>, n = u.<span class="property">height</span> = <span class="variable language_">window</span>.<span class="property">innerHeight</span> || <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientHeight</span> || <span class="variable language_">document</span>.<span class="property">body</span>.<span class="property">clientHeight</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">b</span>(<span class="params"></span>) &#123;</span><br><span class="line">        e.<span class="title function_">clearRect</span>(<span class="number">0</span>, <span class="number">0</span>, r, n);</span><br><span class="line">        <span class="keyword">var</span> w = [f].<span class="title function_">concat</span>(t);</span><br><span class="line">        <span class="keyword">var</span> x, v, A, B, z, y;</span><br><span class="line">        t.<span class="title function_">forEach</span>(<span class="keyword">function</span> (<span class="params">i</span>) &#123;</span><br><span class="line">            i.<span class="property">x</span> += i.<span class="property">xa</span>, i.<span class="property">y</span> += i.<span class="property">ya</span>, i.<span class="property">xa</span> *= i.<span class="property">x</span> &gt; r || i.<span class="property">x</span> &lt; <span class="number">0</span> ? -<span class="number">1</span> : <span class="number">1</span>, i.<span class="property">ya</span> *= i.<span class="property">y</span> &gt; n || i.<span class="property">y</span> &lt; <span class="number">0</span> ? -<span class="number">1</span> : <span class="number">1</span>, e.<span class="title function_">fillRect</span>(i.<span class="property">x</span> - <span class="number">0.5</span>, i.<span class="property">y</span> - <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (v = <span class="number">0</span>; v &lt; w.<span class="property">length</span>; v++) &#123;</span><br><span class="line">                x = w[v];</span><br><span class="line">                <span class="keyword">if</span> (i !== x &amp;&amp; <span class="literal">null</span> !== x.<span class="property">x</span> &amp;&amp; <span class="literal">null</span> !== x.<span class="property">y</span>) &#123;</span><br><span class="line">                    B = i.<span class="property">x</span> - x.<span class="property">x</span>, z = i.<span class="property">y</span> - x.<span class="property">y</span>, y = B * B + z * z;</span><br><span class="line">                    y &lt; x.<span class="property">max</span> &amp;&amp; (x === f &amp;&amp; y &gt;= x.<span class="property">max</span> / <span class="number">2</span> &amp;&amp; (i.<span class="property">x</span> -= <span class="number">0.03</span> * B, i.<span class="property">y</span> -= <span class="number">0.03</span> * z), A = (x.<span class="property">max</span> - y) / x.<span class="property">max</span>, e.<span class="title function_">beginPath</span>(), e.<span class="property">lineWidth</span> = A / <span class="number">2</span>, e.<span class="property">strokeStyle</span> = <span class="string">&quot;rgba(&quot;</span> + s.<span class="property">c</span> + <span class="string">&quot;,&quot;</span> + (A + <span class="number">0.2</span>) + <span class="string">&quot;)&quot;</span>, e.<span class="title function_">moveTo</span>(i.<span class="property">x</span>, i.<span class="property">y</span>), e.<span class="title function_">lineTo</span>(x.<span class="property">x</span>, x.<span class="property">y</span>), e.<span class="title function_">stroke</span>())</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; w.<span class="title function_">splice</span>(w.<span class="title function_">indexOf</span>(i), <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        &#125;), <span class="title function_">m</span>(b)</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">var</span> u = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&quot;canvas&quot;</span>), s = <span class="title function_">l</span>(), c = <span class="string">&quot;c_n&quot;</span> + s.<span class="property">l</span>, e = u.<span class="title function_">getContext</span>(<span class="string">&quot;2d&quot;</span>), r, n, m = <span class="variable language_">window</span>.<span class="property">requestAnimationFrame</span> || <span class="variable language_">window</span>.<span class="property">webkitRequestAnimationFrame</span> || <span class="variable language_">window</span>.<span class="property">mozRequestAnimationFrame</span> || <span class="variable language_">window</span>.<span class="property">oRequestAnimationFrame</span> || <span class="variable language_">window</span>.<span class="property">msRequestAnimationFrame</span> || <span class="keyword">function</span> (<span class="params">i</span>) &#123; <span class="variable language_">window</span>.<span class="built_in">setTimeout</span>(i, <span class="number">1000</span> / <span class="number">45</span>) &#125;, a = <span class="title class_">Math</span>.<span class="property">random</span>, f = &#123; <span class="attr">x</span>: <span class="literal">null</span>, <span class="attr">y</span>: <span class="literal">null</span>, <span class="attr">max</span>: <span class="number">20000</span> &#125;;</span><br><span class="line">    u.<span class="property">id</span> = c;</span><br><span class="line">    u.<span class="property">className</span>=<span class="string">&quot;lizicanvas&quot;</span>;<span class="comment">/*为了方便开关粒子特效，自己给粒子的canvas加了一个类*/</span></span><br><span class="line">    u.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&quot;position:fixed;top:0;left:0;z-index:&quot;</span> + s.<span class="property">z</span> + <span class="string">&quot;;opacity:&quot;</span> + s.<span class="property">o</span>;</span><br><span class="line">    <span class="title function_">j</span>(<span class="string">&quot;body&quot;</span>)[<span class="number">0</span>].<span class="title function_">appendChild</span>(u);</span><br><span class="line">    <span class="title function_">k</span>(), <span class="variable language_">window</span>.<span class="property">onresize</span> = k;</span><br><span class="line">    <span class="variable language_">window</span>.<span class="property">onmousemove</span> = <span class="keyword">function</span> (<span class="params">i</span>) &#123; i = i || <span class="variable language_">window</span>.<span class="property">event</span>, f.<span class="property">x</span> = i.<span class="property">clientX</span>, f.<span class="property">y</span> = i.<span class="property">clientY</span> &#125;, <span class="variable language_">window</span>.<span class="property">onmouseout</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123; f.<span class="property">x</span> = <span class="literal">null</span>, f.<span class="property">y</span> = <span class="literal">null</span> &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> t = [], p = <span class="number">0</span>;s.<span class="property">n</span> &gt; p;p++) &#123;</span><br><span class="line">        <span class="keyword">var</span> h = <span class="title function_">a</span>() * r, g = <span class="title function_">a</span>() * n, q = <span class="number">2</span> * <span class="title function_">a</span>() - <span class="number">1</span>, d = <span class="number">2</span> * <span class="title function_">a</span>() - <span class="number">1</span>;</span><br><span class="line">        t.<span class="title function_">push</span>(&#123; <span class="attr">x</span>: h, <span class="attr">y</span>: g, <span class="attr">xa</span>: q, <span class="attr">ya</span>: d, <span class="attr">max</span>: <span class="number">6000</span> &#125;)</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123; <span class="title function_">b</span>() &#125;, <span class="number">100</span>);</span><br><span class="line">&#125;();</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>好了，写了这么多，全是链接，下期写评论等系统的部署经验，拜拜。</p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>建站</tag>
        <tag>免费</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客0氪建站记录（下）</title>
    <url>/2024/08/29/hexo3/</url>
    <content><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><ol>
<li><p>我还没说过我域名是怎么来的</p>
</li>
<li><p><del>建站不知道多少天了</del>，我的朋友圈竟然还长这样：<br><img src="https://source-admibrill.pages.dev/file/7bd9ae102aa38c6193185.png" alt=""><br>在看了清羽飞扬的<a href="https://blog.liushen.fun/posts/4dc716ec/">Friend-Circle-Lite:轻量友链朋友圈</a>之后，手痒了，决定搞一个。</p>
</li>
<li><p>还有，我还需要自建图床。于是使用<a href="https://github.com/cf-pages/Telegraph-Image">Telegraph Image</a>做了一个。之前用github搞过一个，可是听别人说，github禁止把仓库当图床，轻则删库，重则封号，仓库大于1GB就要人工审核，所以就用了这种方法。</p>
</li>
</ol>
<h2 id="使用cloudflare-Pages部署Github-Pages的网站（？）"><a href="#使用cloudflare-Pages部署Github-Pages的网站（？）" class="headerlink" title="使用cloudflare Pages部署Github Pages的网站（？）"></a>使用cloudflare Pages部署Github Pages的网站（？）</h2><p>实在无法理解，之前那个<code>admibrill.github.io</code>蛮好，但过了几天就无法访问了（？）,但是我的一些朋友还能访问（？）,为了让自己能够访问，我把github上的项目仓库在cf上又部署了一次。</p>
<p>首先，打开cloudflare,找到<code>Workers和Pages</code>然后进入，点击创建，创建一个部署。</p>
<p><img src="https://source-admibrill.pages.dev/file/06561d555b0e66e7ef27c.png" alt=""></p>
<p><img src="https://source-admibrill.pages.dev/file/9e300d58129a590f871dc.png" alt=""></p>
<p>选择仓库，等程序跑完就可以了。</p>
<h2 id="友链朋友圈"><a href="#友链朋友圈" class="headerlink" title="友链朋友圈"></a>友链朋友圈</h2><p>这一部分参考清羽飞扬的博文，<del>清羽的里面有很多碎碎念</del>，我精简一点。</p>
<h3 id="json存储文件"><a href="#json存储文件" class="headerlink" title=".json存储文件"></a>.json存储文件</h3><p>这个文件用于记录朋友圈里会显示的友站。</p>
<p>我们的友链有很多，我们不能每次改了友链都要改这个json文件。于是清羽飞扬提供了生成.json文件的JavaScript：</p>
<p>在<code>[blogroot]</code>新建文件<code>link.js</code>，写入如下内容：（感谢代码）</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">YML</span> = <span class="built_in">require</span>(<span class="string">&#x27;yamljs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> blacklist = [<span class="string">&quot;友站名称1&quot;</span>, <span class="string">&quot;友站名称2&quot;</span>, <span class="string">&quot;友站名称3&quot;</span>]; <span class="comment">// 由于某种原因，不想订阅的列表</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> friends = [],</span><br><span class="line">    data_f = <span class="variable constant_">YML</span>.<span class="title function_">parse</span>(fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;source/_data/link.yml&#x27;</span>).<span class="title function_">toString</span>().<span class="title function_">replace</span>(<span class="regexp">/(?&lt;=rss:)\s*\n/g</span>, <span class="string">&#x27; &quot;&quot;\n&#x27;</span>));</span><br><span class="line"></span><br><span class="line">data_f.<span class="title function_">forEach</span>(<span class="function">(<span class="params">entry, index</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> lastIndex = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (index &lt; lastIndex) &#123;</span><br><span class="line">        <span class="keyword">const</span> filteredLinkList = entry.<span class="property">link_list</span>.<span class="title function_">filter</span>(<span class="function"><span class="params">linkItem</span> =&gt;</span> !blacklist.<span class="title function_">includes</span>(linkItem.<span class="property">name</span>));</span><br><span class="line">        friends = friends.<span class="title function_">concat</span>(filteredLinkList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 根据规定的格式构建 JSON 数据</span></span><br><span class="line"><span class="keyword">const</span> friendData = &#123;</span><br><span class="line">    <span class="attr">friends</span>: friends.<span class="title function_">map</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> [item.<span class="property">name</span>, item.<span class="property">link</span>, item.<span class="property">avatar</span>];</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将 JSON 对象转换为字符串</span></span><br><span class="line"><span class="keyword">const</span> friendJSON = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(friendData, <span class="literal">null</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 写入 friend.json 文件</span></span><br><span class="line">fs.<span class="title function_">writeFileSync</span>(<span class="string">&#x27;./source/friend.json&#x27;</span>, friendJSON);</span><br><span class="line"><span class="comment">//在控制台提示</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;friend.json 文件已生成。&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>然后我们每次更新博客，就得多加一条，保证没有友链漏掉：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node link.js;..... <span class="comment">#...为其他指令</span></span><br></pre></td></tr></table></figure>
<p><strong>现在就更新一次，确保friend.json上传到了网站里！</strong></p>
<h3 id="后端部署"><a href="#后端部署" class="headerlink" title="后端部署"></a>后端部署</h3><p>首先，前往清羽的仓库<a href="https://github.com/willow-god/Friend-Circle-Lite">willow-god/Friend-Circle-Lite: 🐱一个精简版，无后端，且仅利用github action运行的精简版友链朋友圈程序，兼容fc的json格式信息，同时支持推送友圈更新，支持他人订阅个人站点并在更新时发送邮箱推送</a>把仓库Fork复制到自己的账号下：</p>
<p><img src="https://source-admibrill.pages.dev/file/0457a14794145a11dcbb8.png" alt=""></p>
<p>然后到自己的账号里的这个仓库，找到<code>conf.yml</code></p>
<p><img src="https://source-admibrill.pages.dev/file/16d2402b0ef56f0b5ce19.png" alt=""></p>
<p>修改配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 爬虫相关配置</span></span><br><span class="line"><span class="comment"># 解释：使用request实现友链文章爬取，并放置到根目录的all.json下</span></span><br><span class="line"><span class="comment">#   enable:             是否启用爬虫</span></span><br><span class="line"><span class="comment">#   json_url:           请填写对应格式json的地址，仅支持网络地址</span></span><br><span class="line"><span class="comment">#   article_count:      请填写每个博客需要获取的最大文章数量</span></span><br><span class="line"><span class="comment">#   marge_result:       是否合并多个json文件，若为true则会合并指定网络地址和本地地址的json文件</span></span><br><span class="line"><span class="comment">#     enable:           是否启用合并功能，该功能提供与自部署的友链合并功能，可以解决服务器部分国外网站无法访问的问题</span></span><br><span class="line"><span class="comment">#     marge_json_path:  请填写网络地址的json文件，用于合并，不带空格！！！</span></span><br><span class="line"><span class="attr">spider_settings:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">json_url:</span> <span class="string">&quot;https://blog.qyadbr.top/friend.json&quot;</span> <span class="comment">########一定要改，不然是我的，改成&quot;自己的网站/friend.json&quot;</span></span><br><span class="line">  <span class="attr">article_count:</span> <span class="number">15</span></span><br><span class="line">  <span class="attr">merge_result:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">merge_json_url:</span> <span class="string">&quot;https://fc.liushen.fun&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 邮箱推送功能配置，暂未实现，等待后续开发</span></span><br><span class="line"><span class="comment"># 解释：每天为指定邮箱推送所有友链文章的更新，仅能指定一个</span></span><br><span class="line"><span class="comment">#   enable:             是否启用邮箱推送功能</span></span><br><span class="line"><span class="comment">#   to_email:           收件人邮箱地址</span></span><br><span class="line"><span class="comment">#   subject:            邮件主题</span></span><br><span class="line"><span class="comment">#   body_template:      邮件正文的 HTML 模板文件</span></span><br><span class="line"><span class="attr">email_push:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span>   <span class="comment">########### 我不需要，就没有启用</span></span><br><span class="line">  <span class="attr">to_email:</span> <span class="string">recipient@example.com</span></span><br><span class="line">  <span class="attr">subject:</span> <span class="string">&quot;今天的 RSS 订阅更新&quot;</span></span><br><span class="line">  <span class="attr">body_template:</span> <span class="string">&quot;rss_template.html&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 邮箱issue订阅功能配置</span></span><br><span class="line"><span class="comment"># 解释：向在issue中提取的所有邮箱推送您网站中的更新，添加邮箱和删除邮箱均通过添加issue对应格式实现</span></span><br><span class="line"><span class="comment">#   enable:             是否启用邮箱推送功能</span></span><br><span class="line"><span class="comment">#   github_username:    GitHub 用户名，用于构建issue api地址</span></span><br><span class="line"><span class="comment">#   github_repo:        GitHub 仓库名，用于构建issue api地址</span></span><br><span class="line"><span class="comment">#   your_blog_url:      你的博客地址</span></span><br><span class="line"><span class="attr">rss_subscribe:</span></span><br><span class="line">  <span class="attr">enable:</span>  <span class="literal">false</span> <span class="comment">############ 我不需要，就没有启用</span></span><br><span class="line">  <span class="attr">github_username:</span> <span class="string">willow-god</span></span><br><span class="line">  <span class="attr">github_repo:</span> <span class="string">Friend-Circle-Lite</span></span><br><span class="line">  <span class="attr">your_blog_url:</span> <span class="string">https://blog.qyadbr.top/</span></span><br><span class="line">  <span class="attr">email_template:</span> <span class="string">&quot;./rss_subscribe/email_template.html&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SMTP 配置</span></span><br><span class="line"><span class="comment"># 解释：使用其中的相关配置实现上面两种功能，若无推送要求可以不配置，请将以上两个配置置为false</span></span><br><span class="line"><span class="comment">#   email:              发件人邮箱地址</span></span><br><span class="line"><span class="comment">#   server：            SMTP 服务器地址</span></span><br><span class="line"><span class="comment">#   port：              SMTP 端口号</span></span><br><span class="line"><span class="comment">#   use_tls：           是否使用 tls 加密</span></span><br><span class="line"><span class="attr">smtp:</span></span><br><span class="line">  <span class="attr">email:</span> <span class="number">3162475700</span><span class="string">@qq.com</span></span><br><span class="line">  <span class="attr">server:</span> <span class="string">smtp.qq.com</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">587</span></span><br><span class="line">  <span class="attr">use_tls:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><img src="https://source-admibrill.pages.dev/file/8901ef3ed5250a9a41ada.png" alt=""></p>
<h3 id="第一次运行测试"><a href="#第一次运行测试" class="headerlink" title="第一次运行测试"></a>第一次运行测试</h3><p>按图示操作，运行workflow：</p>
<p><img src="https://source-admibrill.pages.dev/file/8babe6f6beed7e37405da.png" alt=""></p>
<p>然后我们点开一条记录，查看<code>Check RSS feeds</code></p>
<p><img src="https://source-admibrill.pages.dev/file/3b9b57ffb17f3a68af552.png" alt=""></p>
<p>有这样的输出即为正常。</p>
<h3 id="使用cloudflare托管后端"><a href="#使用cloudflare托管后端" class="headerlink" title="使用cloudflare托管后端"></a>使用cloudflare托管后端</h3><p>按照前面cloudflare部署的方法，部署一个后端地址。这个地址将会被我们当做后端。</p>
<h3 id="前端部署"><a href="#前端部署" class="headerlink" title="前端部署"></a>前端部署</h3><p>在<code>Blogroot/source/fcircle/index.md</code>中添加如下内容（其实就是加html）：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;friend-circle-lite-root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="title class_">UserConfig</span> === <span class="string">&#x27;undefined&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> <span class="title class_">UserConfig</span> = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 填写你的fc Lite地址</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">private_api_url</span>: <span class="string">&#x27;https://fc.liushen.fun/&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 点击加载更多时，一次最多加载几篇文章，默认20</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">page_turning_number</span>: <span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 头像加载失败时，默认头像地址</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">error_img</span>: <span class="string">&#x27;https://pic.imgdb.cn/item/6695daa4d9c307b7e953ee3d.jpg&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://fastly.jsdelivr.net/gh/willow-god/Friend-Circle-Lite/main/fclite.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://fastly.jsdelivr.net/gh/willow-god/Friend-Circle-Lite/main/fclite.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>ok,朋友圈功能到此完成。</p>
<h2 id="Telegraph-Image图床"><a href="#Telegraph-Image图床" class="headerlink" title="Telegraph Image图床"></a>Telegraph Image图床</h2><p>在写博客的时候，常常需要图片<del>（比如说刚才那个部分就弄了n次图片）</del>。</p>
<p>为了方便自己，自己建了个图床。</p>
<h3 id="部署图床"><a href="#部署图床" class="headerlink" title="部署图床"></a>部署图床</h3><p>首先还是fork仓库（不需要图了吧），<a href="https://github.com/cf-pages/Telegraph-Image">cf-pages/Telegraph-Image: Image Hosting solution, Flickr/imgur alternative, make it easy for users to share their images. Using Cloudflare Pages and Telegraph. (github.com)</a>。</p>
<p>然后把把仓库部署的cloudflare上（不需要图了吧）。</p>
<h3 id="使用PicGo方便Typora上传图片"><a href="#使用PicGo方便Typora上传图片" class="headerlink" title="使用PicGo方便Typora上传图片"></a>使用PicGo方便Typora上传图片</h3><p>然后下载安装PicGo，进入插件，安装插件telegraph-image-uploader</p>
<p>进入图床设置</p>
<p><img src="https://source-admibrill.pages.dev/file/74f1f956e5cb8d939db46.png" alt="image-20240829221408459"></p>
<p>设置URL为你的图床地址，就可以使用PicGo上传啦！</p>
<p>接着使用Markdown编辑器Typora:</p>
<p><img src="https://source-admibrill.pages.dev/file/6ac87f110fed6c040f5e5.png" alt=""></p>
<p>现在截图复制粘贴到Typora里就可以上传了。</p>
<h3 id="使用Python来删除Typora创建的临时图片文件"><a href="#使用Python来删除Typora创建的临时图片文件" class="headerlink" title="使用Python来删除Typora创建的临时图片文件"></a>使用Python来删除Typora创建的临时图片文件</h3><p>但是有个问题：我们粘进Typora的文件，会先放到<code>C:\Users\&lt;username&gt;\AppData\Roaming\Typora\typora-user-images</code>这个文件夹里，久而久之，文件会越来越多，Typora却不自己删除。于是我决定用Python来删除这些文件。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>在任意位置新建一个<code>delete.py</code>，写入如下代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 导入库，放心，都是Python标准库，不用pip</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="comment"># 编辑配置</span></span><br><span class="line">username=<span class="string">&#x27;乐乐&#x27;</span>   <span class="comment">#这是我电脑用户名，需要改成自己的</span></span><br><span class="line">path=<span class="string">&#x27;C:\\Users\\&#x27;</span>+username+<span class="string">&#x27;\\AppData\\Roaming\\Typora\\typora-user-images\\&#x27;</span>  <span class="comment">#检查的目录</span></span><br><span class="line">checktime=<span class="number">5</span> <span class="comment">#每次检查新文件和删除文件的间隔时间</span></span><br><span class="line">deltime=<span class="number">50</span>  <span class="comment">#每个文件存在大于多少秒就要删除，足以等待图片上传完</span></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>: </span><br><span class="line">    listd=os.listdir(path)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> listd:</span><br><span class="line">        <span class="keyword">if</span> time.time()-os.path.getctime(path+i)&gt;deltime:</span><br><span class="line">            os.remove(path+i)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;removed &#x27;</span>+path+i)</span><br><span class="line">    time.sleep(checktime)</span><br></pre></td></tr></table></figure>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>到此hexo建站教程就完结了，886！</p>
]]></content>
      <categories>
        <category>Hexo</category>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>建站</tag>
        <tag>免费</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown与外挂标签语法测试</title>
    <url>/2024/09/15/hexo4/</url>
    <content><![CDATA[<h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><h2 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 一级标题</span></span><br><span class="line"><span class="section">## 二级标题</span></span><br><span class="line"><span class="section">### 三级标题</span></span><br><span class="line"><span class="section">#### 四级标题</span></span><br><span class="line"><span class="section">##### 五级标题</span></span><br><span class="line"><span class="section">###### 六级标题 </span></span><br></pre></td></tr></table></figure>
<p>效果：</p>
<p>为防止标题对本文目录造成影响，见本页文章标题大小</p>
<h2 id="字体样式设置"><a href="#字体样式设置" class="headerlink" title="字体样式设置"></a>字体样式设置</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**加粗**</span></span><br><span class="line"><span class="emphasis">_斜体_</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span>  &lt;!-- 注释， 这里是换行--&gt;</span><br><span class="line">~~删除线~~</span><br></pre></td></tr></table></figure>
<p>效果：<br><strong>加粗</strong><br><em>斜体</em><br><br>  <!-- 注释， 这里是换行--><br><del>删除线</del></p>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><h3 id="插入网页链接"><a href="#插入网页链接" class="headerlink" title="插入网页链接"></a>插入网页链接</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">这是一个网址：https://blog.qyadbr.top</span><br><span class="line">这也是一个网址：<span class="language-xml">&lt;https://blog.qyadbr.top&gt;</span></span><br><span class="line">[<span class="string">Admibrill的博客</span>](<span class="link">https://blog.qyadbr.top</span>)</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<p>这是一个网址：<a href="https://blog.qyadbr.top">https://blog.qyadbr.top</a><br>这也是一个网址：<a href="https://blog.qyadbr.top">https://blog.qyadbr.top</a><br><a href="https://blog.qyadbr.top">Admibrill的博客</a></p>
<h3 id="插入图片链接"><a href="#插入图片链接" class="headerlink" title="插入图片链接"></a>插入图片链接</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">Admibrill的头像</span>](<span class="link">https://source-admibrill.pages.dev/file/f69c9c86b22cb90df18a1.png</span>)</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<p><img src="https://source-admibrill.pages.dev/file/f69c9c86b22cb90df18a1.png" alt="Admibrill的头像"></p>
<h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">__<span class="emphasis">_</span></span></span><br></pre></td></tr></table></figure>
<p>效果：</p>
<hr>
<h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><h3 id="行内代码块"><a href="#行内代码块" class="headerlink" title="行内代码块"></a>行内代码块</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">`abc`</span></span><br></pre></td></tr></table></figure>
<p>效果:<br><code>abc</code></p>
<h3 id="整段代码块"><a href="#整段代码块" class="headerlink" title="整段代码块"></a>整段代码块</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="code">```markdown</span></span><br><span class="line"><span class="code">你好</span></span><br><span class="line"><span class="code">(为了显示这三个`添加了这个括号和这个括号内的内容)```</span></span><br></pre></td></tr></table></figure>
<p>效果<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">你好</span><br></pre></td></tr></table></figure><br>2.6 引用<br><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 有志者,</span></span><br><span class="line"><span class="quote">&gt; 事竟成.</span></span><br></pre></td></tr></table></figure><br>效果：</p>
<blockquote>
<p>有志者,<br>事竟成.</p>
</blockquote>
<h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 第一项</span><br><span class="line"><span class="bullet">-</span> 第二项</span><br><span class="line"><span class="bullet">-</span> 第三项</span><br></pre></td></tr></table></figure>
<p>效果：</p>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项<h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> 第一项</span><br><span class="line"><span class="bullet">2.</span> 第二项</span><br><span class="line"><span class="bullet">3.</span> 第三项</span><br></pre></td></tr></table></figure>
效果：</li>
</ul>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">表头1|表头2|表头3</span><br><span class="line">---|---|---</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th>表头1</th>
<th>表头2</th>
<th>表头3</th>
</tr>
</thead>
<tbody>
<tr>
<td>内容</td>
<td>内容</td>
<td>内容</td>
</tr>
<tr>
<td>内容</td>
<td>内容</td>
<td>内容</td>
</tr>
<tr>
<td>内容</td>
<td>内容</td>
<td>内容</td>
</tr>
<tr>
<td>内容</td>
<td>内容</td>
<td>内容</td>
</tr>
</tbody>
</table>
</div>
<h1 id="外挂标签"><a href="#外挂标签" class="headerlink" title="外挂标签"></a>外挂标签</h1><p><a href="https://www.fomal.cc/posts/2013454d.html">https://www.fomal.cc/posts/2013454d.html</a></p>
]]></content>
      <categories>
        <category>代码语法</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
        <tag>测试</tag>
        <tag>外挂标签</tag>
      </tags>
  </entry>
  <entry>
    <title>自己动手写二维物理引擎（零）</title>
    <url>/2024/09/28/hexo5/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="为什么要写物理引擎"><a href="#为什么要写物理引擎" class="headerlink" title="为什么要写物理引擎"></a>为什么要写物理引擎</h2><p>其实在很久以前就用过别人的物理引擎了，可是这些引擎的功能不满足我的需求，比如说不支持流体的运动，以及实现把一个物体切割成两部分等，还可以制造燃烧，爆炸等效果，别人的物理引擎都没有。所以我决定自己先用python写一款物理引擎，后面再写成JavaScript来实现网页上的效果。</p>
<p>本文的编号是零，意思是这是写物理引擎前的准备工作。</p>
<h2 id="物理引擎的结构"><a href="#物理引擎的结构" class="headerlink" title="物理引擎的结构"></a>物理引擎的结构</h2><p>组成物理引擎的是窗口（Window），力（Force），物体（Object）和效果（Effect）。</p>
<p>窗口就是一个物理场，它记录了很多物理常量（如重力加速度等）</p>
<p>同时，它也是物体的载体，可以控制物体是否能跑到窗口外面去。</p>
<p>力可以使物体运动。会考虑重力、引力、浮力等。</p>
<p>物体分为三种：刚体（solid）、流体（liquid）、和关节（joint）</p>
<blockquote>
<p>刚体是指在运动中和受力作用后，形状和大小不变，而且内部各点的相对位置不变的物体。</p>
</blockquote>
<p>刚体可以分为线段（segment）球体（其实就是一个圆，circle）和多边形（polygon）。</p>
<p>每个刚体都会考虑碰撞。</p>
<p>流体分为牛顿流体和非牛顿流体。</p>
<p>关节可以约束两个刚体，可以伸缩。</p>
<p>效果则包含劈裂、燃烧等</p>
<h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="新建文件"><a href="#新建文件" class="headerlink" title="新建文件"></a>新建文件</h2><p>在同一个目录下新建<code>physics.py</code>和<code>demo.py</code>。<code>physics.py</code>使我们的物理引擎。<code>demo.py</code>则用来测试</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>physics.py</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">from</span> pygame.<span class="built_in">locals</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">pygame.init()</span><br><span class="line"><span class="comment"># pygame.draw.circle(window, (0, 0, 255),[300,300], 170, 0)</span></span><br><span class="line"><span class="comment"># pygame.draw.polygon(window, (255,0,0), [[300,300],[100,400],[100,300]])</span></span><br><span class="line"><span class="comment"># pygame.draw.line(window, (0, 0, 0), [100, 300], [500, 300], 5)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Window</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,width,height,caption</span>):</span><br><span class="line">        <span class="variable language_">self</span>.width=width</span><br><span class="line">        <span class="variable language_">self</span>.height=height</span><br><span class="line">        <span class="variable language_">self</span>.caption=caption</span><br><span class="line">        <span class="variable language_">self</span>.surface=pygame.display.set_mode((<span class="variable language_">self</span>.width,<span class="variable language_">self</span>.height))</span><br><span class="line">        <span class="variable language_">self</span>.bodies=[]</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        pygame.display.set_caption(<span class="variable language_">self</span>.caption)</span><br><span class="line">        flag=<span class="literal">True</span></span><br><span class="line">        <span class="keyword">while</span> flag:</span><br><span class="line">            pygame.display.update()</span><br><span class="line">            <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">                <span class="keyword">if</span> event.<span class="built_in">type</span> == QUIT:</span><br><span class="line">                    pygame.quit()</span><br><span class="line">                    flag=<span class="literal">False</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Object</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Solid</span>(<span class="title class_ inherited__">Object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Liquid</span>(<span class="title class_ inherited__">Object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Joint</span>(<span class="title class_ inherited__">Object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<p>demo.py</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> physics</span><br><span class="line">window1=physics.Window(<span class="number">1000</span>,<span class="number">600</span>,<span class="string">&#x27;123&#x27;</span>)</span><br><span class="line">window1.run()</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>物理引擎</category>
      </categories>
      <tags>
        <tag>物理引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>域名迁移到blog.qyadbr.top</title>
    <url>/2024/10/04/hexo6/</url>
    <content><![CDATA[<p>之前有一个cloudflare免费二级域名<code>admibrill1.pages.dev</code>。</p>
<p>二级域名就是二级域名，有很多限制，加个友链都成问题。从八月开始就想买了，但是我自己买不了，没有条件。</p>
<p>等到9月21日（CSP-J/S第一轮）完成，30日出成绩，总算能买了，就去阿里云买了一个。</p>
<p>现在，有了全新的域名<code>blog.qyadbr.top</code>,<code>qyadbr.top</code>域名下面之后会做很多服务。</p>
<p>拜拜！</p>
]]></content>
      <categories>
        <category>日常记录</category>
      </categories>
      <tags>
        <tag>日常记录</tag>
      </tags>
  </entry>
  <entry>
    <title>自己动手写三维引擎（一）</title>
    <url>/2024/11/24/hexo8/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近比较忙，所以很久没更新。</p>
<p>之前玩过很多三维沙盒游戏，但是很好奇是如何实现那种三维投射的</p>
<p>于是最近写出来了一个三维引擎</p>
<h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>我还是用的qt（自从用qt就发现爱上qt了）去实现打开窗口、画线等功能，但是qt自带的三维支持我不用。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>导入库、创建qt应用、创建空间对象，都不多说。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> QWidget,QApplication</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QPainter,QColor,QPen,QCursor</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QTimer,Qt</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Space</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.objects=[]</span><br><span class="line">qapp=QApplication([])</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>():</span><br><span class="line">    qapp.<span class="built_in">exec</span>()</span><br></pre></td></tr></table></figure>
<h2 id="点对象和相机对象"><a href="#点对象和相机对象" class="headerlink" title="点对象和相机对象"></a>点对象和相机对象</h2><p>组成图形的基本元素是点。为了方便描述三维空间坐标，我创建了一个点对象。<br>同时，需要一个相机，点会投射到相机上</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Point</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,x,y,z</span>):</span><br><span class="line">        <span class="variable language_">self</span>.x=x</span><br><span class="line">        <span class="variable language_">self</span>.y=y</span><br><span class="line">        <span class="variable language_">self</span>.z=z</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Camera</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,space,wwidth,wheight,caption,cwidth,cheight,cdeepth</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        <span class="variable language_">self</span>.resize(wwidth,wheight)<span class="comment">#窗口宽高</span></span><br><span class="line">        <span class="variable language_">self</span>.setWindowTitle(caption)<span class="comment">#窗口标题</span></span><br><span class="line">        <span class="variable language_">self</span>.space=space <span class="comment">#相机所在的空间</span></span><br><span class="line">        <span class="variable language_">self</span>.movement=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>] <span class="comment">#相机试试移动方向</span></span><br><span class="line">        <span class="variable language_">self</span>.rotatex=<span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.rotatey=<span class="number">90</span></span><br><span class="line">        <span class="variable language_">self</span>.rotatez=<span class="number">0</span> <span class="comment">#相机旋转角度</span></span><br><span class="line">        <span class="variable language_">self</span>.posx=<span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.posy=<span class="number">0</span> </span><br><span class="line">        <span class="variable language_">self</span>.posz=<span class="number">0</span> <span class="comment">#相机的位置</span></span><br><span class="line">        <span class="variable language_">self</span>.controled=<span class="literal">True</span> <span class="comment">#鼠标是否控制</span></span><br><span class="line">        <span class="variable language_">self</span>.movespeed=<span class="number">1</span> <span class="comment">#移速</span></span><br><span class="line">        <span class="variable language_">self</span>.setCursor(Qt.CursorShape.BlankCursor)</span><br><span class="line">        <span class="variable language_">self</span>.objects2D=[]</span><br><span class="line">        <span class="variable language_">self</span>.cwidth=cwidth   </span><br><span class="line">        <span class="variable language_">self</span>.cheight=cheight  <span class="comment">#相机宽高</span></span><br><span class="line">        <span class="variable language_">self</span>.cdeepth=cdeepth   <span class="comment">#相机视锥深度</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">launch</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.timer=QTimer()</span><br><span class="line">        <span class="variable language_">self</span>.timer.start(<span class="number">5</span>)</span><br><span class="line">        <span class="variable language_">self</span>.timer.timeout.connect(<span class="variable language_">self</span>.update)</span><br><span class="line">        <span class="variable language_">self</span>.show()</span><br></pre></td></tr></table></figure>
<h3 id="投射"><a href="#投射" class="headerlink" title="投射"></a>投射</h3><p>这是整个三维投影中最关键的一点。</p>
<p><img src="https://s1.imagehub.cc/images/2024/11/24/aedd57047163cacfb51e36e33511af97.png" alt=""></p>
<p>可见，$\triangle OAE \sim \triangle OFD$, $OA$是相机深度，D是我们要投射的点 ，O是相机的位置，求出BE就可以求出E点的位置，即显示在屏幕上的位置。</p>
<p>从上面看（x坐标）和从右边看（y坐标）这张图都适用。</p>
<p>但是要考虑相机会旋转角度的问题。不妨将相机到投射的点看作一个向量。</p>
<p>假设相机位置为$(a<em>{x},a</em>{y},a<em>{z})$,投射的点的位置为$(c</em>{x},c<em>{y},c</em>{z})$,相机长$w$，宽$h$，深$d$</p>
<p>先计算向量旋转后的新向量：</p>
<script type="math/tex; mode=display">
\begin{bmatrix}
d_{x}  \\
d_{y}  \\ 
d_{z}
\end{bmatrix}
=
\begin{bmatrix} 
1 & 0 & 0 \\
0 & \cos (\theta_{x}) &\sin(\theta_{x}) \\
0 & -\sin(\theta_{x})& \cos(\theta_{x})
\end{bmatrix} 
\begin{bmatrix}
\cos(\theta_{y}) &0 & -\sin(\theta_{y}) \\
0 & 1& 0 \\
\sin(\theta_{y})& 0 & \cos(\theta_{y})
\end{bmatrix}
\begin{bmatrix} 
\cos(\theta_{z})&\sin(\theta_{z})& 0 \\
-\sin(\theta_{z})&\cos(\theta_{z})&0 \\
0&0&1
\end{bmatrix}
\begin{bmatrix}
a_{x}-c_{x} \\
a_{y}-c_{y} \\
a_{z}-c_{z}
\end{bmatrix}</script><p>利用相似三角形对应边成比例，得：</p>
<script type="math/tex; mode=display">
x=\frac{w}{2}-\frac{d}{d_{z}}d_{x}</script><script type="math/tex; mode=display">
y=\frac{h}{2}-\frac{d}{d_{z}}d_{y}</script><p>因此我们有了代码：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Point():</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">project</span>(<span class="params">self,camera</span>):</span><br><span class="line">        cx, cy, cz = camera.posx, camera.posy, camera.posz</span><br><span class="line">        thx, thy, thz = -camera.rotatex, camera.rotatey, camera.rotatez</span><br><span class="line">        x = <span class="variable language_">self</span>.x - cx</span><br><span class="line">        y = <span class="variable language_">self</span>.y - cy</span><br><span class="line">        z = <span class="variable language_">self</span>.z - cz</span><br><span class="line">        dx = math.cos(thy)*(math.sin(thz)*y+math.cos(thz)*x)-math.sin(thy)*z</span><br><span class="line">        dy = math.sin(thx)*(math.cos(thy)*z+math.sin(thy)*(math.sin(thz)*y+math.cos(thz)*x))+\</span><br><span class="line">            math.cos(thx)*(math.cos(thz)*y-math.sin(thz)*x)</span><br><span class="line">        dz = math.cos(thx)*(math.cos(thy)*z+math.sin(thy)*(math.sin(thz)*y+math.cos(thz)*x))-\</span><br><span class="line">            math.sin(thx)*(math.cos(thz)*y-math.sin(thz)*x)</span><br><span class="line">        newx= camera.cwidth/<span class="number">2</span>-(camera.cdeepth/dz) * dx</span><br><span class="line">        newy= camera.cheight/<span class="number">2</span>-(camera.cdeepth/dz) * dy </span><br><span class="line">        <span class="keyword">if</span> camera.width()/camera.height()&gt;camera.cwidth/camera.cheight:</span><br><span class="line">            rectw=camera.height()/camera.cheight*camera.cwidth</span><br><span class="line">            resultx=camera.width()/<span class="number">2</span>-rectw/<span class="number">2</span>+newx/camera.cwidth*rectw</span><br><span class="line">            resulty=newy/camera.cheight*camera.height()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            recth=camera.width()/camera.cwidth*camera.cheight</span><br><span class="line">            resultx=newx/camera.cwidth*camera.width()</span><br><span class="line">            resulty=camera.height()/<span class="number">2</span>-recth/<span class="number">2</span>+newy/camera.cheight*recth</span><br><span class="line">        <span class="keyword">return</span> resultx,resulty,dz&gt;<span class="number">0</span><span class="comment">#当dz&lt;=0时，即投影的点在相机的后面时，投射的位置不正确，需要特判处理</span></span><br></pre></td></tr></table></figure></p>
<h2 id="线段"><a href="#线段" class="headerlink" title="线段"></a>线段</h2><p>连接两个点的是线段。将一个线段投影之后线段还是直的，所以只需连接两个投影后的端点即可得到投影后的线段。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Segment</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,point1,point2</span>):</span><br><span class="line">        <span class="variable language_">self</span>.point1=point1</span><br><span class="line">        <span class="variable language_">self</span>.point2=point2</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">paint</span>(<span class="params">self,camera</span>):</span><br><span class="line">        x1,y1,m1=<span class="variable language_">self</span>.point1.project(camera)</span><br><span class="line">        x2,y2,m2=<span class="variable language_">self</span>.point2.project(camera)</span><br><span class="line">        <span class="keyword">if</span> m1&gt;<span class="number">0</span> <span class="keyword">and</span> m2&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> x1,y1,x2,y2</span><br><span class="line">        <span class="keyword">elif</span> m1&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> x1,y1,<span class="number">2</span>*x1-x2,<span class="number">2</span>*y1-y2</span><br><span class="line">        <span class="keyword">elif</span> m2&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span>*x2-x1,<span class="number">2</span>*y2-y1,x2,y2  <span class="comment">#这两都是将投影错误的端点绕着正确的端点旋转180度，即中心对称</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>,-<span class="number">1</span>,-<span class="number">1</span>,-<span class="number">1</span> <span class="comment">#当两个端点都在后面，说明这条线段在摄像机后面，因此不用显示</span></span><br></pre></td></tr></table></figure>
<h2 id="相机的控制"><a href="#相机的控制" class="headerlink" title="相机的控制"></a>相机的控制</h2><h4 id="监听键盘"><a href="#监听键盘" class="headerlink" title="监听键盘"></a>监听键盘</h4><p>用WSAD键移动，反引号键（Esc下面那个）呼出呼入鼠标。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Camera(QWidget):</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">keyPressEvent</span>(<span class="params">self, event</span>):</span><br><span class="line">        <span class="keyword">if</span> event.key()==Qt.Key.Key_W:</span><br><span class="line">            <span class="variable language_">self</span>.movement[<span class="number">0</span>]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> event.key()==Qt.Key.Key_S:</span><br><span class="line">            <span class="variable language_">self</span>.movement[<span class="number">0</span>]=-<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> event.key()==Qt.Key.Key_A:</span><br><span class="line">            <span class="variable language_">self</span>.movement[<span class="number">2</span>]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> event.key()==Qt.Key.Key_D:</span><br><span class="line">            <span class="variable language_">self</span>.movement[<span class="number">2</span>]=-<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> event.key()==Qt.Key.Key_Space:</span><br><span class="line">            <span class="variable language_">self</span>.movement[<span class="number">1</span>]=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> event.key()==Qt.Key.Key_Shift:</span><br><span class="line">            <span class="variable language_">self</span>.movement[<span class="number">1</span>]=-<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> event.key()==Qt.Key.Key_QuoteLeft:</span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>.controled:</span><br><span class="line">                <span class="variable language_">self</span>.setCursor(Qt.CursorShape.ArrowCursor)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="variable language_">self</span>.setCursor(Qt.CursorShape.BlankCursor)</span><br><span class="line">            <span class="variable language_">self</span>.controled=<span class="keyword">not</span> <span class="variable language_">self</span>.controled</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">keyReleaseEvent</span>(<span class="params">self,event</span>):</span><br><span class="line">        <span class="variable language_">self</span>.movement=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br></pre></td></tr></table></figure>
<h4 id="进行移动和旋转操作"><a href="#进行移动和旋转操作" class="headerlink" title="进行移动和旋转操作"></a>进行移动和旋转操作</h4><p>刚刚已经改变了<code>self.movement</code>的值，现在只需要根据值来移动相机，如果鼠标已锁住，同时用鼠标到窗口正中心的偏移来旋转相机，然后把鼠标的位置设置到画面正中心。</p>
<p>当<code>QWidget.update()</code>被执行时，就会执行<code>paintEvent()</code>，重写这个函数就可以实现重复执行。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Camera(QWidget):</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">paintEvent</span>(<span class="params">self,event</span>):</span><br><span class="line">        <span class="variable language_">self</span>.posx+= <span class="variable language_">self</span>.movement[<span class="number">0</span>]*math.sin(<span class="variable language_">self</span>.rotatey)*<span class="variable language_">self</span>.movespeed*<span class="number">0.01</span></span><br><span class="line">        <span class="variable language_">self</span>.posx+= <span class="variable language_">self</span>.movement[<span class="number">2</span>]*math.sin(<span class="variable language_">self</span>.rotatey+math.radians(<span class="number">90</span>))*<span class="variable language_">self</span>.movespeed*<span class="number">0.01</span></span><br><span class="line">        <span class="variable language_">self</span>.posy+= <span class="variable language_">self</span>.movement[<span class="number">1</span>]*<span class="variable language_">self</span>.movespeed*<span class="number">0.01</span></span><br><span class="line">        <span class="variable language_">self</span>.posz+= <span class="variable language_">self</span>.movement[<span class="number">0</span>]*math.cos(<span class="variable language_">self</span>.rotatey)*<span class="variable language_">self</span>.movespeed*<span class="number">0.01</span></span><br><span class="line">        <span class="variable language_">self</span>.posz+= <span class="variable language_">self</span>.movement[<span class="number">2</span>]*math.cos(<span class="variable language_">self</span>.rotatey+math.radians(<span class="number">90</span>))*<span class="variable language_">self</span>.movespeed*<span class="number">0.01</span></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.controled:</span><br><span class="line">            centerx=<span class="variable language_">self</span>.geometry().center().x()</span><br><span class="line">            centery=<span class="variable language_">self</span>.geometry().center().y()</span><br><span class="line">            mousex=QCursor.pos().x()</span><br><span class="line">            mousey=QCursor.pos().y()</span><br><span class="line">            offsetx=centerx-mousex</span><br><span class="line">            offsety=centery-mousey</span><br><span class="line">            <span class="variable language_">self</span>.rotatex+=offsety*<span class="number">0.001</span> </span><br><span class="line">            <span class="variable language_">self</span>.rotatex=<span class="built_in">min</span>(math.radians(<span class="number">90</span>),<span class="variable language_">self</span>.rotatex)</span><br><span class="line">            <span class="variable language_">self</span>.rotatex=<span class="built_in">max</span>(math.radians(-<span class="number">90</span>),<span class="variable language_">self</span>.rotatex)<span class="comment">#绕x轴旋转的极限</span></span><br><span class="line">            <span class="variable language_">self</span>.rotatey+=offsetx*<span class="number">0.001</span></span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>.rotatey&gt;math.radians(<span class="number">180</span>):</span><br><span class="line">                <span class="variable language_">self</span>.rotatey-=math.radians(<span class="number">360</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>.rotatey&lt;math.radians(-<span class="number">180</span>):</span><br><span class="line">                <span class="variable language_">self</span>.rotatey+=math.radians(<span class="number">360</span>) <span class="comment">#绕y轴旋转处理</span></span><br><span class="line">            QCursor.setPos(<span class="variable language_">self</span>.geometry().center())</span><br></pre></td></tr></table></figure>
<h2 id="多面体"><a href="#多面体" class="headerlink" title="多面体"></a>多面体</h2><p>将线段相接，得到多面体。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Body</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,space,vertixes,edges</span>):</span><br><span class="line">        <span class="variable language_">self</span>.vertixes=vertixes</span><br><span class="line">        <span class="variable language_">self</span>.edges=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> edges:</span><br><span class="line">            <span class="variable language_">self</span>.edges.append(Segment(Point(*(vertixes[i[<span class="number">0</span>]])),Point(*(vertixes[i[<span class="number">1</span>]]))))</span><br><span class="line">        <span class="variable language_">self</span>.space=space</span><br><span class="line">        <span class="variable language_">self</span>.space.objects.append(<span class="variable language_">self</span>)</span><br></pre></td></tr></table></figure>
<h3 id="矩体"><a href="#矩体" class="headerlink" title="矩体"></a>矩体</h3><p>矩体是一种特殊的多面体。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Cubold</span>(<span class="title class_ inherited__">Body</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,space,x,y,z,length,width,height</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(space,[[x,y,z],[x+length,y,z],[x,y,z+width],[x+length,y,z+height],</span><br><span class="line">                    [x,y+height,z],[x+length,y+height,z],[x,y+height,z+width],[x+length,y+height,z+length]],<span class="comment">#描述顶点坐标</span></span><br><span class="line">                    [[<span class="number">0</span>,<span class="number">1</span>],[<span class="number">1</span>,<span class="number">3</span>],[<span class="number">2</span>,<span class="number">0</span>],[<span class="number">3</span>,<span class="number">2</span>],[<span class="number">4</span>,<span class="number">5</span>],[<span class="number">5</span>,<span class="number">7</span>],[<span class="number">6</span>,<span class="number">4</span>],[<span class="number">7</span>,<span class="number">6</span>],[<span class="number">0</span>,<span class="number">4</span>],[<span class="number">1</span>,<span class="number">5</span>],[<span class="number">2</span>,<span class="number">6</span>],[<span class="number">3</span>,<span class="number">7</span>]])<span class="comment">#连棱</span></span><br></pre></td></tr></table></figure>
<h2 id="平面文字"><a href="#平面文字" class="headerlink" title="平面文字"></a>平面文字</h2><p>没有什么特别的，但是设置了一个更新时会执行的函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Text2D</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,camera,x,y,content</span>) :</span><br><span class="line">        <span class="variable language_">self</span>.x=x</span><br><span class="line">        <span class="variable language_">self</span>.y=y</span><br><span class="line">        <span class="variable language_">self</span>.camera=camera</span><br><span class="line">        <span class="variable language_">self</span>.content=content</span><br><span class="line">        <span class="variable language_">self</span>.camera.objects2D.append(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">camera</span>):</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="variable language_">self</span>.updatefunc=update</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setText</span>(<span class="params">self,content</span>):</span><br><span class="line">        <span class="variable language_">self</span>.content=content</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setUpdate</span>(<span class="params">self,func</span>):</span><br><span class="line">        <span class="variable language_">self</span>.updatefunc=func</span><br></pre></td></tr></table></figure>
<h2 id="更新相机画面"><a href="#更新相机画面" class="headerlink" title="更新相机画面"></a>更新相机画面</h2><p>把当前相机所在空间中的每一个多面体的每一条棱画出来，同时也也要写文字，执行文字更新是的那个函数</p>
<p>使用<code>QPainter</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Camera(QWidget):</span></span><br><span class="line"><span class="comment">#   def paintEvent(self,event):</span></span><br><span class="line">		painter = QPainter(<span class="variable language_">self</span>)</span><br><span class="line">        color=QColor()</span><br><span class="line">        color.setRgb(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>)</span><br><span class="line">        pen=QPen()</span><br><span class="line">        pen.setColor(color)</span><br><span class="line">        painter.setPen(pen)</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.controled:</span><br><span class="line">            painter.drawLine(<span class="variable language_">self</span>.width()/<span class="number">2</span>-<span class="number">2</span>,<span class="variable language_">self</span>.height()/<span class="number">2</span>,<span class="variable language_">self</span>.width()/<span class="number">2</span>+<span class="number">2</span>,<span class="variable language_">self</span>.height()/<span class="number">2</span>)</span><br><span class="line">            painter.drawLine(<span class="variable language_">self</span>.width()/<span class="number">2</span>,<span class="variable language_">self</span>.height()/<span class="number">2</span>-<span class="number">2</span>,<span class="variable language_">self</span>.width()/<span class="number">2</span>,<span class="variable language_">self</span>.height()/<span class="number">2</span>+<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable language_">self</span>.space.objects:</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> i.edges:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    x1,y1,x2,y2=j.paint(<span class="variable language_">self</span>)</span><br><span class="line">                    painter.drawLine(x1,y1,x2,y2)</span><br><span class="line">                <span class="keyword">except</span>:</span><br><span class="line">                    <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable language_">self</span>.objects2D:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(i,Text2D):</span><br><span class="line">                painter.drawText(i.x,i.y,i.content)</span><br><span class="line">            i.updatefunc(<span class="variable language_">self</span>)</span><br></pre></td></tr></table></figure>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>我把这个文件叫做<code>threedengine.py</code>。同时建了一个测试文件<code>demo.py</code>。</p>
<h2 id="测试代码"><a href="#测试代码" class="headerlink" title="测试代码"></a>测试代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> threedengine</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">space=threedengine.Space()</span><br><span class="line">camera=threedengine.Camera(space,<span class="number">1000</span>,<span class="number">500</span>,<span class="string">&#x27;三维视图&#x27;</span>,<span class="number">800</span>,<span class="number">400</span>,<span class="number">300</span>)</span><br><span class="line">camera.launch()</span><br><span class="line">body=threedengine.Cubold(space,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">text=threedengine.Text2D(camera,<span class="number">10</span>,<span class="number">10</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">camera</span>):</span><br><span class="line">    text.setText(<span class="string">&#x27;位置：(%f,%f,%f) 方向：%f° 俯仰：%f°&#x27;</span>%(camera.posx,camera.posy,camera.posz,math.degrees(camera.rotatey),math.degrees(camera.rotatex)))</span><br><span class="line">text.setUpdate(update)</span><br><span class="line">threedengine.run()</span><br></pre></td></tr></table></figure>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://s1.imagehub.cc/images/2024/11/24/33885258cb2ec9febc7db99b45a1715d.png" alt="image"></p>
<p>到这里这篇文章就结束了，886！</p>
]]></content>
      <categories>
        <category>三维引擎</category>
      </categories>
      <tags>
        <tag>三维引擎</tag>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title>自己动手写二维物理引擎（一）</title>
    <url>/2024/10/20/hexo7/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这一篇，继续之前的想法，开始写物理引擎的代码。</p>
<p>由于<strong>pygame不能同时打开多个窗口</strong>，我决定换<strong>Qt</strong>来显示窗口。</p>
<h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="导入库"><a href="#导入库" class="headerlink" title="导入库"></a>导入库</h2><p>打开<code>physics.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6 <span class="keyword">import</span> * </span><br><span class="line"><span class="keyword">import</span> math</span><br></pre></td></tr></table></figure>
<ul>
<li><code>PySide6</code>：这是Qt官方的PyQt6的库。这里我们用它来实现窗口以及内容的显示。</li>
<li><code>math</code>：Python数学库，用来处理一些高级的物理计算。</li>
</ul>
<h2 id="全局常量"><a href="#全局常量" class="headerlink" title="全局常量"></a>全局常量</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DYMANIC=<span class="number">0</span></span><br><span class="line">STATIC=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>这些常量定义了物体的状态等信息，后学会有更多常量写在这里。</p>
<h2 id="Qt应用程序"><a href="#Qt应用程序" class="headerlink" title="Qt应用程序"></a>Qt应用程序</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">qapp=QtWidgets.QApplication([])</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>():</span><br><span class="line">    qapp.<span class="built_in">exec</span>()</span><br></pre></td></tr></table></figure>
<p>之后在<code>demo.py</code>中运行<code>physics.run()</code>即可运行应用程序。</p>
<h1 id="物理空间"><a href="#物理空间" class="headerlink" title="物理空间"></a>物理空间</h1><p>编写一个<code>Space(QtWidegets.QWidget)</code>类来模拟一个物理空间，这将被显示为一个窗口。</p>
<h2 id="实例化"><a href="#实例化" class="headerlink" title="实例化"></a>实例化</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Space</span>(QtWidgets.QWidget):	</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,width,height,caption,g</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        <span class="variable language_">self</span>.width=width</span><br><span class="line">        <span class="variable language_">self</span>.height=height</span><br><span class="line">        <span class="variable language_">self</span>.caption=caption</span><br><span class="line">        <span class="variable language_">self</span>.objects=[]</span><br><span class="line">        <span class="variable language_">self</span>.g=g</span><br><span class="line">        <span class="variable language_">self</span>.timer = QtCore.QTimer()</span><br></pre></td></tr></table></figure>
<ul>
<li><code>width</code>：窗口的宽度</li>
<li><code>height</code>：窗口的高度</li>
<li><code>caption</code>：窗口的标题</li>
<li><code>objects</code>：物理空间中所有物体列表</li>
<li><code>g</code>：重力加速度（常量）</li>
<li><code>timer</code>：使用qt计时器，用来定时运行一些函数</li>
</ul>
<h2 id="启动窗口"><a href="#启动窗口" class="headerlink" title="启动窗口"></a>启动窗口</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Space(QtWidgets.QWidget):	</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">launch</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.resize(<span class="variable language_">self</span>.width,<span class="variable language_">self</span>.height)</span><br><span class="line">        <span class="variable language_">self</span>.setWindowTitle(<span class="variable language_">self</span>.caption)</span><br><span class="line">        <span class="variable language_">self</span>.timer.start(<span class="number">5</span>)</span><br><span class="line">        <span class="variable language_">self</span>.timer.timeout.connect(<span class="variable language_">self</span>.moveObjects)</span><br><span class="line">        <span class="variable language_">self</span>.timer.timeout.connect(<span class="variable language_">self</span>.update)</span><br><span class="line">        <span class="variable language_">self</span>.show()</span><br></pre></td></tr></table></figure>
<p>该函数可以使物理空间窗口弹出并初始化。</p>
<h2 id="移动与绘制"><a href="#移动与绘制" class="headerlink" title="移动与绘制"></a>移动与绘制</h2><p>一个使窗口移动，并制造重力，另一个绘制。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Space(QtWidgets.QWidget):</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">moveObjects</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable language_">self</span>.objects:</span><br><span class="line">            <span class="keyword">if</span> i.stype==DYMANIC:</span><br><span class="line">                gravity=Force(<span class="variable language_">self</span>.g,math.pi/<span class="number">2</span>)</span><br><span class="line">                i.forceCompound(gravity)</span><br><span class="line">                i.move()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">paintEvent</span>(<span class="params">self,event</span>):</span><br><span class="line">        painter = QtGui.QPainter(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable language_">self</span>.objects:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">isinstance</span>(i,Circle):</span><br><span class="line">                painter.setPen(i.pen)</span><br><span class="line">                painter.drawEllipse(i.cpoint,i.r,i.r)</span><br><span class="line">                painter.drawLine(i.cpoint.x(),i.cpoint.y(),</span><br><span class="line">                              i.cpoint.x()+i.r*math.cos(i.direction),i.cpoint.y()+i.r*math.sin(i.direction))</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">isinstance</span>(i,Segment):</span><br><span class="line">                painter.setPen(i.pen)</span><br><span class="line">                painter.drawLine(i.x1,i.y1,i.x2,i.y2)</span><br></pre></td></tr></table></figure>
<h1 id="力与物体对象"><a href="#力与物体对象" class="headerlink" title="力与物体对象"></a>力与物体对象</h1><h2 id="力"><a href="#力" class="headerlink" title="力"></a>力</h2><p>力是最简单的一个类，它是一个<strong>向量</strong>，只有两个成员：方向和大小。</p>
<p>特别注意，所有的角单位都用弧度（$\pi\space \text{rad}=180^{\circ}$）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Force</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,size,angle</span>):</span><br><span class="line">        <span class="variable language_">self</span>.size=size</span><br><span class="line">        <span class="variable language_">self</span>.angle=angle</span><br></pre></td></tr></table></figure>
<h2 id="物体对象"><a href="#物体对象" class="headerlink" title="物体对象"></a>物体对象</h2><p>物体对象有很多种，如刚体、流体、关节</p>
<h3 id="实例化-1"><a href="#实例化-1" class="headerlink" title="实例化"></a>实例化</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Object</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,z,window,color,mass,angle</span>):</span><br><span class="line">        <span class="variable language_">self</span>.z=z</span><br><span class="line">        <span class="variable language_">self</span>.window=window</span><br><span class="line">        <span class="variable language_">self</span>.window.objects.append(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.color=QtGui.QColor()</span><br><span class="line">        <span class="variable language_">self</span>.color.setRgb(color[<span class="number">0</span>],color[<span class="number">1</span>],color[<span class="number">2</span>])</span><br><span class="line">        <span class="variable language_">self</span>.mass=mass</span><br><span class="line">        <span class="variable language_">self</span>.velocity=<span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.angle=angle</span><br></pre></td></tr></table></figure>
<ul>
<li><code>z</code>：层坐标，<code>z</code>不同的两个元素不会发生碰撞。</li>
<li><code>window</code>：所在的窗口</li>
<li><code>color</code>：对象显示的颜色</li>
<li><code>mass</code>：对象的质量</li>
<li><code>velocity</code>：运动速度</li>
<li><code>angle</code>：运动方向</li>
</ul>
<h3 id="人为施力"><a href="#人为施力" class="headerlink" title="人为施力"></a>人为施力</h3><p><img src="https://image.qyadbr.top/file/97ff9678655c516d94095-c862322cf153358e6a.png" alt="image-20241020192920919"></p>
<p>可以看出，我们可以利用三角函数把物体当前的方向和速度分解为水平方向上的速度和垂直方向上的速度，对施加的力作同样的处理，将水平和垂直的分别相加再转换为新的速度和角度就可以实现人为施力。</p>
<p>于是又了下面的代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Object():</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">forceCompound</span>(<span class="params">self,add_force</span>):</span><br><span class="line">        cur_force_size=<span class="variable language_">self</span>.velocity</span><br><span class="line">        cur_force_dx=cur_force_size*math.cos(<span class="variable language_">self</span>.angle)+add_force.size*math.cos(add_force.angle)/<span class="variable language_">self</span>.mass</span><br><span class="line">        cur_force_dy=cur_force_size*math.sin(<span class="variable language_">self</span>.angle)+add_force.size*math.sin(add_force.angle)/<span class="variable language_">self</span>.mass</span><br><span class="line">        <span class="variable language_">self</span>.velocity=math.sqrt(cur_force_dx**<span class="number">2</span>+cur_force_dy**<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> cur_force_dx&gt;=<span class="number">0</span>:</span><br><span class="line">            <span class="variable language_">self</span>.angle=math.atan(cur_force_dy/cur_force_dx)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.angle=math.atan(cur_force_dy/cur_force_dx)+math.pi</span><br></pre></td></tr></table></figure>
<h3 id="删除对象"><a href="#删除对象" class="headerlink" title="删除对象"></a>删除对象</h3><p>把对象移除，不多赘述</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Object():</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">destroy</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.window.objects.remove(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.window=<span class="literal">None</span></span><br><span class="line">        <span class="keyword">del</span> <span class="variable language_">self</span></span><br></pre></td></tr></table></figure>
<h1 id="刚体"><a href="#刚体" class="headerlink" title="刚体"></a>刚体</h1><p>目前先实现圆、线段。之后会实现多边形。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solid</span>(<span class="title class_ inherited__">Object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,z,window,color,stype,mass,angle,direction</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(z,window,color,mass,angle)</span><br><span class="line">        <span class="variable language_">self</span>.stype=stype</span><br><span class="line">        <span class="variable language_">self</span>.direction=direction</span><br><span class="line">        <span class="variable language_">self</span>.pen = QtGui.QPen(<span class="variable language_">self</span>.color)</span><br><span class="line">        <span class="variable language_">self</span>.pen.setWidth(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Circle</span>(<span class="title class_ inherited__">Solid</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,window,z,x,y,r,direction,stype,mass,angle=<span class="number">0</span>,color=(<span class="params"><span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span></span>)</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(z,window,color,stype,mass,angle,direction)</span><br><span class="line">        <span class="variable language_">self</span>.cpoint=QtCore.QPointF(x,y)</span><br><span class="line">        <span class="variable language_">self</span>.r=r</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.cpoint.setX(<span class="variable language_">self</span>.cpoint.x()+<span class="variable language_">self</span>.velocity*math.cos(<span class="variable language_">self</span>.angle))</span><br><span class="line">        <span class="variable language_">self</span>.cpoint.setY(<span class="variable language_">self</span>.cpoint.y()+<span class="variable language_">self</span>.velocity*math.sin(<span class="variable language_">self</span>.angle))</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hit</span>(<span class="params">self,c</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Segment</span>(<span class="title class_ inherited__">Solid</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,window,z,x1,y1,x2,y2,direction,stype,mass,angle=<span class="number">0</span>,color=(<span class="params"><span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span></span>)</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(z,window,color,stype,mass,angle,direction)</span><br><span class="line">        <span class="variable language_">self</span>.x1=x1</span><br><span class="line">        <span class="variable language_">self</span>.y1=y1</span><br><span class="line">        <span class="variable language_">self</span>.x2=x2</span><br><span class="line">        <span class="variable language_">self</span>.y2=y2</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.x1+=<span class="variable language_">self</span>.velocity*math.cos(<span class="variable language_">self</span>.angle)</span><br><span class="line">        <span class="variable language_">self</span>.y1+=<span class="variable language_">self</span>.velocity*math.sin(<span class="variable language_">self</span>.angle)</span><br><span class="line">        <span class="variable language_">self</span>.x2+=<span class="variable language_">self</span>.velocity*math.cos(<span class="variable language_">self</span>.angle)</span><br><span class="line">        <span class="variable language_">self</span>.y2+=<span class="variable language_">self</span>.velocity*math.sin(<span class="variable language_">self</span>.angle)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hit</span>(<span class="params">self,c</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure>
<h2 id="angle与direction的区别"><a href="#angle与direction的区别" class="headerlink" title="angle与direction的区别"></a><code>angle</code>与<code>direction</code>的区别</h2><p><code>angle</code>是指运动方向。而<code>direction</code>是只物体本身的朝向。</p>
<h1 id="效果测试"><a href="#效果测试" class="headerlink" title="效果测试"></a>效果测试</h1><p><code>demo.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> physics</span><br><span class="line"></span><br><span class="line">window1=physics.Space(<span class="number">1000</span>,<span class="number">600</span>,<span class="string">&#x27;123&#x27;</span>,<span class="number">9.8</span>)</span><br><span class="line">window1.launch()</span><br><span class="line">circle1=physics.Circle(window1,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="number">40</span>,<span class="number">0</span>,physics.DYMANIC,<span class="number">1000</span>)</span><br><span class="line">force1=physics.Force(<span class="number">1000</span>,<span class="number">0</span>)</span><br><span class="line">circle1.forceCompound(force1)</span><br><span class="line">segment1=physics.Segment(window1,<span class="number">0</span>,<span class="number">50</span>,<span class="number">550</span>,<span class="number">950</span>,<span class="number">550</span>,<span class="number">0</span>,physics.STATIC,<span class="number">1000</span>)</span><br><span class="line">physics.run()</span><br></pre></td></tr></table></figure>
<p><img src="https://image.qyadbr.top/file/cb091da5c9e4ad39451f3-b40670a181745f9d8a.gif" alt="21-24-31"></p>
<h1 id="下期预告"><a href="#下期预告" class="headerlink" title="下期预告"></a>下期预告</h1><p>下一期会实现多边形以及碰撞检测。886！</p>
]]></content>
      <categories>
        <category>物理引擎</category>
      </categories>
      <tags>
        <tag>物理引擎</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Qt实现一个简易时钟应用</title>
    <url>/2024/12/08/hexo9/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我使用Qt制作了一个时钟应用，现在来分享一下实现的过程。</p>
<p>这个小项目包括了四个部分：</p>
<ul>
<li>时钟（显示当前时间）</li>
<li>秒表（正向计时器，支持记录时间）</li>
<li>倒计时</li>
<li>闹钟</li>
</ul>
<h1 id="各种准备工作"><a href="#各种准备工作" class="headerlink" title="各种准备工作"></a>各种准备工作</h1><h2 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h2><p>制作这个应用，我使用了一大堆<code>QtWidgets</code>组件。同时，还有至关重要的<code>time</code>模块。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PySide6.QtWidgets <span class="keyword">import</span> (QApplication,QWidget,QPushButton,QGroupBox,QLabel,</span><br><span class="line">                                QTableWidget,QTableWidgetItem,QProgressBar,QScrollArea,</span><br><span class="line">				                QDialog,QGridLayout,QVBoxLayout,QHBoxLayout,QSpinBox,QLineEdit,QComboBox,QSystemTrayIcon,QCheckBox)</span><br><span class="line"><span class="keyword">from</span> PySide6.QtGui <span class="keyword">import</span> QIcon,QFont</span><br><span class="line"><span class="keyword">from</span> PySide6.QtCore <span class="keyword">import</span> QObject,QTimer,Qt,QSize</span><br><span class="line"><span class="keyword">import</span> time</span><br></pre></td></tr></table></figure>
<p>然后，建立一个<code>QApplication</code>，定义一些常量。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">qapp=QApplication([])</span><br><span class="line">icon=QIcon(<span class="string">&#x27;../media/images/1.png&#x27;</span>) <span class="comment">#窗口图标</span></span><br><span class="line">widgetslist=[] <span class="comment">#每个模式对应一个窗格</span></span><br><span class="line">musicUrlList=[<span class="string">&#x27;../media/audio/1.wav&#x27;</span>] <span class="comment">#闹铃音乐</span></span><br><span class="line">musicNameList=[<span class="string">&#x27;音乐1&#x27;</span>] <span class="comment">#音乐名称</span></span><br><span class="line"></span><br><span class="line">menubuttonnamelist=[<span class="string">&#x27;时钟&#x27;</span>,<span class="string">&#x27;秒表&#x27;</span>,<span class="string">&#x27;倒计时&#x27;</span>,<span class="string">&#x27;闹钟&#x27;</span>]</span><br><span class="line">menubuttonlist=[]</span><br><span class="line">mode=<span class="number">0</span> <span class="comment">#当前的模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#下面这段永远放在最后</span></span><br><span class="line">qapp.<span class="built_in">exec</span>()</span><br></pre></td></tr></table></figure>
<h2 id="建立窗口"><a href="#建立窗口" class="headerlink" title="建立窗口"></a>建立窗口</h2><p>建立一个类，继承<code>QtWidgets.QWidget</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Window</span>(<span class="title class_ inherited__">QWidget</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,width,height,title,icon</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        <span class="variable language_">self</span>.setWindowTitle(QObject.tr(title))</span><br><span class="line">        <span class="variable language_">self</span>.resize(width,height)</span><br><span class="line">        <span class="variable language_">self</span>.setWindowIcon(icon)</span><br></pre></td></tr></table></figure>
<p>实例化窗口对象。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">mainWindow=Window(<span class="number">1000</span>,<span class="number">600</span>,<span class="string">&#x27;时钟&#x27;</span>,icon)</span><br><span class="line">mainWindow.show()</span><br></pre></td></tr></table></figure>
<h2 id="功能窗格与切换按钮"><a href="#功能窗格与切换按钮" class="headerlink" title="功能窗格与切换按钮"></a>功能窗格与切换按钮</h2><p>我在窗口左侧做了四个按钮，分别对应四种功能。点击按钮就可以切换窗格的显示状态。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#定义按钮类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MenuButton</span>(<span class="title class_ inherited__">QPushButton</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,parent,num</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(parent)</span><br><span class="line">        <span class="variable language_">self</span>.num=num</span><br><span class="line">        <span class="variable language_">self</span>.clicked.connect(<span class="variable language_">self</span>.toggleMode)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">toggleMode</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">global</span> mode</span><br><span class="line">        widgetslist[mode].hide()</span><br><span class="line">        widgetslist[<span class="variable language_">self</span>.num].show()</span><br><span class="line">        mode=<span class="variable language_">self</span>.num</span><br><span class="line"><span class="comment">#显示</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(menubuttonnamelist)):</span><br><span class="line">    button=MenuButton(mainWindow,i)</span><br><span class="line">    button.setText(menubuttonnamelist[i])</span><br><span class="line">    button.move(<span class="number">10</span>,<span class="number">10</span>+i*<span class="number">30</span>)</span><br><span class="line">    button.show()</span><br><span class="line">    menubuttonlist.append(button)</span><br><span class="line">    group=QGroupBox(parent=mainWindow,title=menubuttonnamelist[i])</span><br><span class="line">    group.resize(<span class="number">890</span>,<span class="number">580</span>)</span><br><span class="line">    group.move(<span class="number">100</span>,<span class="number">10</span>)</span><br><span class="line">    widgetslist.append(group)</span><br></pre></td></tr></table></figure>
<h2 id="窗格尺寸自适应"><a href="#窗格尺寸自适应" class="headerlink" title="窗格尺寸自适应"></a>窗格尺寸自适应</h2><p>当缩放窗口时，窗格的大小不会改变，因此我们要自动设置窗格的尺寸。</p>
<p>在<code>Qt</code>中，<code>QWidget</code>被缩放大小就会自动执行<code>resizeEvent</code>函数，重写其内容即可。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Window(QWidget):</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">resizeEvent</span>(<span class="params">self,event</span>):</span><br><span class="line">        size=<span class="variable language_">self</span>.size()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> widgetslist:</span><br><span class="line">            i.resize(size.width()-<span class="number">110</span>,size.height()-<span class="number">20</span>)</span><br></pre></td></tr></table></figure>
<h1 id="时间显示"><a href="#时间显示" class="headerlink" title="时间显示"></a>时间显示</h1><p>这是整个项目最最简单的一部分。</p>
<h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">nowtime=time.strftime(<span class="string">&#x27;%H:%M:%S&#x27;</span>)</span><br><span class="line">labelTime=QLabel(widgetslist[<span class="number">0</span>])</span><br><span class="line">font=QFont(<span class="string">&#x27;Arian&#x27;</span>,<span class="number">100</span>,<span class="number">10</span>)</span><br><span class="line">labelTime.setFont(font)</span><br><span class="line">labelTime.setText(nowtime)</span><br></pre></td></tr></table></figure>
<h2 id="更新显示"><a href="#更新显示" class="headerlink" title="更新显示"></a>更新显示</h2><p>除了刷新时间，还设置了窗口自适应</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">update</span>():</span><br><span class="line">    size1_1=widgetslist[<span class="number">0</span>].size()</span><br><span class="line">    nowtime=time.strftime(<span class="string">&#x27;%H:%M:%S&#x27;</span>)</span><br><span class="line">    labelTime.setText(nowtime)</span><br><span class="line">    labelTime.move(size1_1.width()/<span class="number">2</span>-size2.width()/<span class="number">2</span>,size1_1.height()/<span class="number">2</span>-size2.height()/<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">timer=QTimer()</span><br><span class="line">timer.start(<span class="number">0.05</span>)</span><br><span class="line">timer.timeout.connect(update)</span><br></pre></td></tr></table></figure>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://s1.imagehub.cc/images/2024/12/03/5eb951eea3aace8e6aee72c6a5ba299b.png" alt="image"></p>
<h1 id="正向计时器"><a href="#正向计时器" class="headerlink" title="正向计时器"></a>正向计时器</h1><p>这是第二个功能，需要实现一个可以开始、暂停的计时器，计时状态下可以记录，非计时状态下可以清零。</p>
<h2 id="创建组件"><a href="#创建组件" class="headerlink" title="创建组件"></a>创建组件</h2><p>实现它，需要一个文本显示，三个按钮，以及一个表格。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">recorder=QLabel(widgetslist[<span class="number">1</span>])</span><br><span class="line">recorder.setText(<span class="string">&#x27;00:00:00.000&#x27;</span>)</span><br><span class="line">recorder.setFont(font)</span><br><span class="line">startStopButton=QPushButton(<span class="string">&#x27;开始&#x27;</span>,widgetslist[<span class="number">1</span>])</span><br><span class="line">recordButton=QPushButton(<span class="string">&#x27;记录&#x27;</span>,widgetslist[<span class="number">1</span>])</span><br><span class="line">recordButton.setDisabled(<span class="literal">True</span>)</span><br><span class="line">clearButton=QPushButton(<span class="string">&#x27;清零&#x27;</span>,widgetslist[<span class="number">1</span>])</span><br><span class="line">clearButton.setDisabled(<span class="literal">True</span>)</span><br><span class="line">recordTable=QTableWidget(<span class="number">0</span>,<span class="number">3</span>,widgetslist[<span class="number">1</span>])</span><br><span class="line">recordTable.setHorizontalHeaderLabels([<span class="string">&#x27;序次&#x27;</span>,<span class="string">&#x27;间隔&#x27;</span>,<span class="string">&#x27;总计&#x27;</span>])</span><br><span class="line">recordTable.verticalHeader().setVisible(<span class="literal">False</span>)</span><br><span class="line">recordTable.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)</span><br><span class="line">recordTable.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOff)</span><br></pre></td></tr></table></figure>
<h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">startTimeStamp=<span class="number">0</span></span><br><span class="line">lastEndStamp=<span class="number">0</span></span><br><span class="line">lastRecordStamp=<span class="number">0</span></span><br><span class="line">running=<span class="literal">False</span></span><br><span class="line">timeDelta=<span class="number">0</span></span><br></pre></td></tr></table></figure>
<ul>
<li><code>startTimeStamp</code>：计时开始的时间戳</li>
<li><code>lastEndStamp</code>：上次暂停时的时间戳</li>
<li><code>lastRecordStamp</code>：上次记录时的时间戳，用于计算记录间隔</li>
<li><code>running</code>：是否正在计时</li>
<li><code>timeDelta</code>：暂停后，将产生时间差，在计算当前时间是要减去这个时间差<h2 id="获取与格式化时间戳"><a href="#获取与格式化时间戳" class="headerlink" title="获取与格式化时间戳"></a>获取与格式化时间戳</h2></li>
</ul>
<p>变量已经齐全，下一步就是获取当前的时间。获取时间可以使用下面简单的公式：</p>
<script type="math/tex; mode=display">
res=now-startTimeStamp-timeDelta</script><p>这个公式要使用多次，所以封装成函数:</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getTime</span>():</span><br><span class="line">    <span class="keyword">global</span> startTimeStamp,timeDelta</span><br><span class="line">    <span class="keyword">return</span> time.time()-startTimeStamp-timeDelta </span><br></pre></td></tr></table></figure>
<p>获取到时间之后，将时间戳直接展示给用户肯定不现实，因此将其转换成时间字符串。同时，要传入一个参数，表示取整还是精确到小数点后三位。（后续倒计时和闹钟都不取后三位。）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">formatTime</span>(<span class="params">data,<span class="built_in">round</span>=<span class="literal">False</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#123;:0&gt;2d&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>(data//<span class="number">3600</span>))+<span class="string">&#x27;:&#x27;</span>+<span class="string">&#x27;&#123;:0&gt;2d&#125;&#x27;</span>.<span class="built_in">format</span>((<span class="built_in">int</span>(data)%<span class="number">3600</span>)//<span class="number">60</span>)+<span class="string">&#x27;:&#x27;</span>+<span class="string">&#x27;&#123;:0&gt;2d&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>(data)%<span class="number">60</span>)+(<span class="string">&#x27;.&#x27;</span>+<span class="string">&#x27;&#123;:0&gt;3d&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">int</span>((data%<span class="number">1</span>)*<span class="number">1000</span>)) <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">round</span> <span class="keyword">else</span> <span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="计时控制"><a href="#计时控制" class="headerlink" title="计时控制"></a>计时控制</h2><p>刚刚我创建了三个按钮组件，现在在要对应地写着三个按钮被点击是执行的函数。</p>
<h3 id="开始和停止"><a href="#开始和停止" class="headerlink" title="开始和停止"></a>开始和停止</h3><p>这个函数可以控制<code>running</code>变量，以及做出对应的操作：</p>
<ul>
<li>设置按钮位置；</li>
<li>改变<code>timeDelta</code></li>
<li>设置按钮</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">startStop</span>():</span><br><span class="line">    <span class="keyword">global</span> running,startTimeStamp,lastEndStamp,timeDelta,lastRecordStamp</span><br><span class="line">    <span class="keyword">if</span> running:</span><br><span class="line">        lastEndStamp=time.time()</span><br><span class="line">        startStopButton.setText(<span class="string">&#x27;开始&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> startTimeStamp==<span class="number">0</span>:</span><br><span class="line">            startTimeStamp=lastEndStamp=time.time()</span><br><span class="line">        timeDelta+=time.time()-lastEndStamp</span><br><span class="line">        startStopButton.setText(<span class="string">&#x27;停止&#x27;</span>)</span><br><span class="line">    recordButton.setDisabled(running)</span><br><span class="line">    running=<span class="keyword">not</span> running</span><br><span class="line">    clearButton.setDisabled(running)</span><br></pre></td></tr></table></figure>
<h3 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h3><p>记录按钮被按下时，就在表格中插入一行，第一列是次数，第二列是间隔，第三列是总计时间。最后，还要设置这次记录的时间戳，以计算这一次到下一次记录的时间间隔。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">writeRecord</span>():</span><br><span class="line">    <span class="keyword">global</span> lastRecordStamp</span><br><span class="line">    recordTable.insertRow(<span class="number">0</span>)</span><br><span class="line">    recordTable.setItem(<span class="number">0</span>,<span class="number">0</span>,QTableWidgetItem(<span class="built_in">str</span>(recordTable.rowCount())))</span><br><span class="line">    <span class="keyword">if</span> recordTable.rowCount()&gt;<span class="number">1</span>:</span><br><span class="line">        recordTable.setItem(<span class="number">0</span>,<span class="number">1</span>,QTableWidgetItem(formatTime(getTime()-lastRecordStamp)))</span><br><span class="line">    recordTable.setItem(<span class="number">0</span>,<span class="number">2</span>,QTableWidgetItem(formatTime(getTime())))</span><br><span class="line">    lastRecordStamp=getTime()</span><br></pre></td></tr></table></figure>
<h3 id="清除记录"><a href="#清除记录" class="headerlink" title="清除记录"></a>清除记录</h3><p>清除，要把各种变量都初始化，设置时间文本的文字也为初始的。因为表格控件没有提供清空函数，所以只能逐行删除直至表格为空为止。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">clearRecord</span>():</span><br><span class="line">    <span class="keyword">global</span> startTimeStamp,lastEndStamp,timeDelta,recorder</span><br><span class="line">    startTimeStamp=lastEndStamp=timeDelta=<span class="number">0</span></span><br><span class="line">    recorder.setText(<span class="string">&#x27;00:00:00.000&#x27;</span>)</span><br><span class="line">    clearButton.setDisabled(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">while</span>(recordTable.rowCount()&gt;<span class="number">0</span>):</span><br><span class="line">        recordTable.removeRow(<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<h3 id="连接按钮与函数"><a href="#连接按钮与函数" class="headerlink" title="连接按钮与函数"></a>连接按钮与函数</h3><p>使用<code>按钮控件.clicked.connect(函数名)</code>就可以在按钮被点击时调用函数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">startStopButton.clicked.connect(startStop)  </span><br><span class="line">recordButton.clicked.connect(writeRecord)     </span><br><span class="line">clearButton.clicked.connect(clearRecord)</span><br></pre></td></tr></table></figure>
<h2 id="更新显示-1"><a href="#更新显示-1" class="headerlink" title="更新显示"></a>更新显示</h2><p>窗口的自适应需要一些计算。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># def update():</span></span><br><span class="line">    <span class="keyword">global</span> startTimeStamp,timeDelta</span><br><span class="line">    <span class="comment"># size1_1=widgetslist[0].size()</span></span><br><span class="line">    <span class="comment"># nowtime=time.strftime(&#x27;%H:%M:%S&#x27;)</span></span><br><span class="line">    <span class="comment"># labelTime.setText(nowtime)</span></span><br><span class="line">    <span class="comment"># labelTime.move(size1_1.width()/2-size2.width()/2,size1_1.height()/2-size2.height()/2)</span></span><br><span class="line">    </span><br><span class="line">    size1_2=widgetslist[<span class="number">1</span>].size()</span><br><span class="line">    size2=labelTime.size()</span><br><span class="line">    size3=recorder.size()</span><br><span class="line">    size4=startStopButton.size()</span><br><span class="line">    size5=recordButton.size()</span><br><span class="line">    size6=clearButton.size()</span><br><span class="line">    recorder.move(size1_2.width()/<span class="number">2</span>-size3.width()/<span class="number">2</span>,<span class="number">10</span>)</span><br><span class="line">    startStopButton.move(size1_2.width()/<span class="number">2</span>-size5.width()/<span class="number">2</span>-<span class="number">10</span>-size4.width(),size1_2.height()-<span class="number">10</span>-size4.height())</span><br><span class="line">    recordButton.move(size1_2.width()/<span class="number">2</span>-size5.width()/<span class="number">2</span>,size1_2.height()-<span class="number">10</span>-size5.height())</span><br><span class="line">    clearButton.move(size1_2.width()/<span class="number">2</span>+size5.width()/<span class="number">2</span>+<span class="number">10</span>,size1_2.height()-<span class="number">10</span>-size6.height())</span><br><span class="line">    recordTable.resize(size1_2.width()-<span class="number">200</span>,size1_2.height()-<span class="number">320</span>)</span><br><span class="line">    size7=recordTable.size()</span><br><span class="line">    recordTable.move(size1_2.width()/<span class="number">2</span>-size7.width()/<span class="number">2</span>,<span class="number">220</span>)</span><br><span class="line">    recordTable.setColumnWidth(<span class="number">0</span>,<span class="number">40</span>)</span><br><span class="line">    recordTable.setColumnWidth(<span class="number">1</span>,size7.width()/<span class="number">2</span>-<span class="number">20</span>)</span><br><span class="line">    recordTable.setColumnWidth(<span class="number">2</span>,size7.width()/<span class="number">2</span>-<span class="number">20</span>)</span><br><span class="line">    <span class="keyword">if</span> running:</span><br><span class="line">        stampDelta=getTime()</span><br><span class="line">        rec=formatTime(stampDelta)</span><br><span class="line">        recorder.setText(rec)</span><br></pre></td></tr></table></figure>
<h2 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h2><p><img src="https://s1.imagehub.cc/images/2024/12/08/d5680b89d31cdccd2edf6412960c29e6.png" alt="image"></p>
<h1 id="倒计时"><a href="#倒计时" class="headerlink" title="倒计时"></a>倒计时</h1><p>倒计时不像正向计时那么简单，需要支持一些倒计时同时计时。这就需要建立一个倒计时类来完成这个任务。</p>
<h2 id="创建组件-1"><a href="#创建组件-1" class="headerlink" title="创建组件"></a>创建组件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">newCountDown=QPushButton(<span class="string">&#x27;新建&#x27;</span>,widgetslist[<span class="number">2</span>])</span><br><span class="line">deleteCountDown=QPushButton(<span class="string">&#x27;编辑&#x27;</span>,widgetslist[<span class="number">2</span>])</span><br><span class="line">countDownScrollArea=QScrollArea(widgetslist[<span class="number">2</span>])</span><br><span class="line">countDownScrollArea.move(<span class="number">10</span>,<span class="number">30</span>)</span><br><span class="line">countDownScrollArea.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)</span><br><span class="line">countDownScrollAreaWidget=QWidget()</span><br><span class="line">countDownScrollArea.setWidget(countDownScrollAreaWidget)</span><br><span class="line">countDownList=[]</span><br></pre></td></tr></table></figure>
<p>还是一些按钮，但是多了一个滚动区，这样可以滚动显示倒计时控件。</p>
<h2 id="创建倒计时类"><a href="#创建倒计时类" class="headerlink" title="创建倒计时类"></a>创建倒计时类</h2><p>我将在<code>QtWidgets.QGroupBox</code>的基础上制作这个倒计时组件。</p>
<h3 id="实例化"><a href="#实例化" class="headerlink" title="实例化"></a>实例化</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CountDown</span>(<span class="title class_ inherited__">QGroupBox</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,parent,timelength,title,music</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(parent)</span><br><span class="line">        <span class="variable language_">self</span>.timelength=timelength</span><br><span class="line">        <span class="variable language_">self</span>.titlestr=title</span><br><span class="line">        <span class="variable language_">self</span>.music=music</span><br><span class="line">        <span class="variable language_">self</span>.restTime=<span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.startTimeStamp=<span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.lastEndStamp=<span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.timeDelta=<span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.running=<span class="literal">False</span></span><br></pre></td></tr></table></figure>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>实例化方法内不能穿件组件，所以单独建一个启动函数，在对象实例化之后使用。<br>按钮绑定的函数后续都会定义。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class CountDown(QGroupBox):</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">launch</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.resize(<span class="number">400</span>,<span class="number">300</span>)</span><br><span class="line">        <span class="variable language_">self</span>.restTime=<span class="variable language_">self</span>.timelength</span><br><span class="line">        <span class="variable language_">self</span>.timelabel=QLabel(formatTime(<span class="variable language_">self</span>.restTime),<span class="variable language_">self</span>)</span><br><span class="line">        font=QFont(<span class="string">&#x27;Arian&#x27;</span>,<span class="number">40</span>,<span class="number">10</span>)</span><br><span class="line">        <span class="variable language_">self</span>.timelabel.setFont(font)</span><br><span class="line">        <span class="variable language_">self</span>.progressbar=QProgressBar(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.progressbar.setTextVisible(<span class="literal">False</span>)</span><br><span class="line">        <span class="variable language_">self</span>.progressbar.setRange(<span class="number">0</span>,<span class="number">10000</span>)</span><br><span class="line">        <span class="variable language_">self</span>.startStopButton=QPushButton(<span class="string">&#x27;开始&#x27;</span>,<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.startStopButton.clicked.connect(<span class="variable language_">self</span>.startStop)</span><br><span class="line">        <span class="variable language_">self</span>.clearButton=QPushButton(<span class="string">&#x27;还原&#x27;</span>,<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.clearButton.clicked.connect(<span class="variable language_">self</span>.reset)</span><br><span class="line">        <span class="variable language_">self</span>.clearButton.setDisabled(<span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.editButton=<span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.deleteButton=<span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.mode=<span class="literal">True</span></span><br></pre></td></tr></table></figure>
<h3 id="其他函数"><a href="#其他函数" class="headerlink" title="其他函数"></a>其他函数</h3><p>包括：</p>
<ul>
<li>切换模式（开始与清除/编辑与删除）</li>
<li>开始停止</li>
<li>更新显示</li>
<li>清除</li>
<li>编辑</li>
<li>倒计时结束任务栏通知</li>
<li>删除</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class CountDown(QGroupBox)</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">toggleMode</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.mode:</span><br><span class="line">            <span class="variable language_">self</span>.startStopButton.hide()</span><br><span class="line">            <span class="variable language_">self</span>.clearButton.hide()</span><br><span class="line">            <span class="variable language_">self</span>.editButton=QPushButton(<span class="string">&#x27;编辑&#x27;</span>,<span class="variable language_">self</span>)</span><br><span class="line">            <span class="variable language_">self</span>.editButton.clicked.connect(<span class="variable language_">self</span>.edit)</span><br><span class="line">            <span class="variable language_">self</span>.editButton.show()</span><br><span class="line">            <span class="variable language_">self</span>.deleteButton=QPushButton(<span class="string">&#x27;删除&#x27;</span>,<span class="variable language_">self</span>)</span><br><span class="line">            <span class="variable language_">self</span>.deleteButton.clicked.connect(<span class="variable language_">self</span>.deleteSelf)</span><br><span class="line">            <span class="variable language_">self</span>.deleteButton.show()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.startStopButton.show()</span><br><span class="line">            <span class="variable language_">self</span>.clearButton.show()</span><br><span class="line">            <span class="variable language_">self</span>.editButton.hide()</span><br><span class="line">            <span class="variable language_">self</span>.editButton=<span class="literal">None</span></span><br><span class="line">            <span class="variable language_">self</span>.deleteButton.hide()</span><br><span class="line">            <span class="variable language_">self</span>.deleteButton=<span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.mode=<span class="keyword">not</span> <span class="variable language_">self</span>.mode</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">updating</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.setTitle(<span class="variable language_">self</span>.titlestr)</span><br><span class="line">        selfsize=<span class="variable language_">self</span>.size()</span><br><span class="line">        buttonsize=<span class="variable language_">self</span>.startStopButton.size()</span><br><span class="line">        progressbarsize=<span class="variable language_">self</span>.progressbar.size()</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(<span class="variable language_">self</span>.timelength-<span class="built_in">max</span>(<span class="number">0</span>,time.time()-<span class="variable language_">self</span>.startTimeStamp-<span class="variable language_">self</span>.timeDelta))&lt;<span class="number">0.0005</span>:</span><br><span class="line">            <span class="variable language_">self</span>.showMessage()</span><br><span class="line">            <span class="variable language_">self</span>.startStop()</span><br><span class="line">            <span class="variable language_">self</span>.timelabel.setText(<span class="string">&#x27;00:00:00:000&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.restTime=<span class="built_in">max</span>(<span class="number">0</span>,<span class="variable language_">self</span>.timelength-<span class="built_in">max</span>(<span class="number">0</span>,time.time()-<span class="variable language_">self</span>.startTimeStamp-<span class="variable language_">self</span>.timeDelta))</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.running:</span><br><span class="line">            <span class="variable language_">self</span>.timelabel.setText(formatTime(<span class="variable language_">self</span>.restTime))</span><br><span class="line">            <span class="variable language_">self</span>.progressbar.setValue(<span class="variable language_">self</span>.restTime/<span class="variable language_">self</span>.timelength*<span class="number">10000</span>)</span><br><span class="line">            <span class="variable language_">self</span>.progressbar.update()</span><br><span class="line">        labelsize=<span class="variable language_">self</span>.timelabel.size()</span><br><span class="line">        <span class="variable language_">self</span>.timelabel.move(selfsize.width()/<span class="number">2</span>-labelsize.width()/<span class="number">2</span>,selfsize.height()/<span class="number">2</span>-labelsize.height()/<span class="number">2</span>)</span><br><span class="line">        <span class="variable language_">self</span>.progressbar.resize(selfsize.width()-<span class="number">20</span>,<span class="number">20</span>)</span><br><span class="line">        <span class="variable language_">self</span>.progressbar.move(<span class="number">10</span>,selfsize.height()-<span class="number">10</span>-buttonsize.height()-<span class="number">10</span>-progressbarsize.height())</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.mode:</span><br><span class="line">            <span class="variable language_">self</span>.startStopButton.move(selfsize.width()/<span class="number">2</span>-<span class="number">5</span>-buttonsize.width(),selfsize.height()-<span class="number">10</span>-buttonsize.height())</span><br><span class="line">            <span class="variable language_">self</span>.clearButton.move(selfsize.width()/<span class="number">2</span>+<span class="number">5</span>,selfsize.height()-<span class="number">10</span>-buttonsize.height())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.editButton.move(selfsize.width()/<span class="number">2</span>-<span class="number">5</span>-buttonsize.width(),selfsize.height()-<span class="number">10</span>-buttonsize.height())</span><br><span class="line">            <span class="variable language_">self</span>.deleteButton.move(selfsize.width()/<span class="number">2</span>+<span class="number">5</span>,selfsize.height()-<span class="number">10</span>-buttonsize.height())</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">startStop</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.running:</span><br><span class="line">            <span class="variable language_">self</span>.lastEndStamp=time.time()</span><br><span class="line">            <span class="variable language_">self</span>.startStopButton.setText(<span class="string">&#x27;开始&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>.startTimeStamp==<span class="number">0</span>:</span><br><span class="line">                <span class="variable language_">self</span>.startTimeStamp=<span class="variable language_">self</span>.lastEndStamp=time.time()</span><br><span class="line">            <span class="variable language_">self</span>.timeDelta+=time.time()-<span class="variable language_">self</span>.lastEndStamp</span><br><span class="line">            <span class="variable language_">self</span>.startStopButton.setText(<span class="string">&#x27;停止&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.running=<span class="keyword">not</span> <span class="variable language_">self</span>.running</span><br><span class="line">        <span class="variable language_">self</span>.clearButton.setDisabled(<span class="variable language_">self</span>.running)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">reset</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.startTimeStamp=<span class="variable language_">self</span>.lastEndStamp=<span class="variable language_">self</span>.timeDelta=<span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.timelabel.setText(formatTime(<span class="variable language_">self</span>.timelength))</span><br><span class="line">        <span class="variable language_">self</span>.clearButton.setDisabled(<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">self</span>):</span><br><span class="line">        editor=CountDownEdit(<span class="variable language_">self</span>.timelength,<span class="variable language_">self</span>.titlestr,<span class="variable language_">self</span>.music)</span><br><span class="line">        editor.editData()</span><br><span class="line">        <span class="variable language_">self</span>.timelength=editor.length</span><br><span class="line">        <span class="variable language_">self</span>.restTime=<span class="variable language_">self</span>.timelength</span><br><span class="line">        <span class="variable language_">self</span>.titlestr=editor.titlestr</span><br><span class="line">        <span class="variable language_">self</span>.music=editor.music</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">showMessage</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.trayicon=QSystemTrayIcon()</span><br><span class="line">        <span class="variable language_">self</span>.trayicon.setIcon(icon)</span><br><span class="line">        <span class="variable language_">self</span>.trayicon.show()</span><br><span class="line">        <span class="variable language_">self</span>.trayicon.showMessage(<span class="string">&#x27;计时器到了&#x27;</span>,<span class="string">&#x27;倒计时&#x27;</span>+<span class="variable language_">self</span>.titlestr+<span class="string">&#x27;计时已完成。&#x27;</span>,icon)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">deleteSelf</span>(<span class="params">self</span>):</span><br><span class="line">        countDownList.remove(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.deleteLater()</span><br><span class="line">        <span class="keyword">del</span> <span class="variable language_">self</span></span><br></pre></td></tr></table></figure>
<h2 id="倒计时编辑类"><a href="#倒计时编辑类" class="headerlink" title="倒计时编辑类"></a>倒计时编辑类</h2><p>刚刚的<code>edit()</code>函数里，就有一个<code>CountDownEdit</code>。当用户编辑一个倒计时时，就要打开一个倒计时编辑窗口，因此，我单独再建一个类，打开一个<code>QtWidgets.QDialog</code>。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CountDownEdit</span>(<span class="title class_ inherited__">QDialog</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,length,title,music</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        <span class="variable language_">self</span>.confirmed=<span class="literal">False</span></span><br><span class="line">        <span class="variable language_">self</span>.length=length</span><br><span class="line">        <span class="variable language_">self</span>.titlestr=title</span><br><span class="line">        <span class="variable language_">self</span>.music=music</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">editData</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.setWindowTitle(<span class="string">&#x27;倒计时编辑&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.vlayout=QVBoxLayout()</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout=QGridLayout()</span><br><span class="line">        <span class="variable language_">self</span>.hlayout=QHBoxLayout()</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.setSpacing(<span class="number">10</span>)</span><br><span class="line">        <span class="variable language_">self</span>.label1=QLabel(<span class="string">&#x27;时长&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.label2=QLabel(<span class="string">&#x27;标题&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.label3=QLabel(<span class="string">&#x27;音乐&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1=QHBoxLayout()</span><br><span class="line">        <span class="variable language_">self</span>.content1_1=QSpinBox()</span><br><span class="line">        <span class="variable language_">self</span>.content1_1.setMinimum(<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_1.setMaximum(<span class="number">99</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_1.setValue(<span class="variable language_">self</span>.length//<span class="number">3600</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_2=QLabel(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_3=QSpinBox()</span><br><span class="line">        <span class="variable language_">self</span>.content1_3.setMinimum(<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_3.setMaximum(<span class="number">59</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_3.setValue((<span class="variable language_">self</span>.length%<span class="number">3600</span>)//<span class="number">60</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_4=QLabel(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_5=QSpinBox()</span><br><span class="line">        <span class="variable language_">self</span>.content1_5.setMinimum(<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_5.setMaximum(<span class="number">59</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_5.setValue(<span class="variable language_">self</span>.length%<span class="number">60</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1.addWidget(<span class="variable language_">self</span>.content1_1)</span><br><span class="line">        <span class="variable language_">self</span>.content1.addWidget(<span class="variable language_">self</span>.content1_2)</span><br><span class="line">        <span class="variable language_">self</span>.content1.addWidget(<span class="variable language_">self</span>.content1_3)</span><br><span class="line">        <span class="variable language_">self</span>.content1.addWidget(<span class="variable language_">self</span>.content1_4)</span><br><span class="line">        <span class="variable language_">self</span>.content1.addWidget(<span class="variable language_">self</span>.content1_5)</span><br><span class="line">        <span class="variable language_">self</span>.content2=QLineEdit()</span><br><span class="line">        <span class="variable language_">self</span>.content2.setText(<span class="variable language_">self</span>.titlestr)</span><br><span class="line">        <span class="variable language_">self</span>.content3=QComboBox()</span><br><span class="line">        <span class="variable language_">self</span>.content3.addItems(musicNameList)</span><br><span class="line">        <span class="variable language_">self</span>.content3.setCurrentIndex(<span class="variable language_">self</span>.music)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.label1,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.label2,<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.label3,<span class="number">2</span>,<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addLayout(<span class="variable language_">self</span>.content1,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.content2,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.content3,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">self</span>.confirm=QPushButton(<span class="string">&#x27;确定&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.cancel=QPushButton(<span class="string">&#x27;取消&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.confirm.clicked.connect(<span class="variable language_">self</span>.confirming)</span><br><span class="line">        <span class="variable language_">self</span>.cancel.clicked.connect(<span class="variable language_">self</span>.close)</span><br><span class="line">        <span class="variable language_">self</span>.hlayout.addWidget(<span class="variable language_">self</span>.confirm)</span><br><span class="line">        <span class="variable language_">self</span>.hlayout.addWidget(<span class="variable language_">self</span>.cancel)</span><br><span class="line">        <span class="variable language_">self</span>.vlayout.addLayout(<span class="variable language_">self</span>.gridlayout)</span><br><span class="line">        <span class="variable language_">self</span>.vlayout.addLayout(<span class="variable language_">self</span>.hlayout)</span><br><span class="line">        <span class="variable language_">self</span>.setLayout(<span class="variable language_">self</span>.vlayout)</span><br><span class="line">        <span class="variable language_">self</span>.show()</span><br><span class="line">        <span class="variable language_">self</span>.<span class="built_in">exec</span>()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">confirming</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.confirmed=<span class="literal">True</span></span><br><span class="line">        <span class="variable language_">self</span>.length=<span class="variable language_">self</span>.content1_1.value()*<span class="number">3600</span>+<span class="variable language_">self</span>.content1_3.value()*<span class="number">60</span>+<span class="variable language_">self</span>.content1_5.value()</span><br><span class="line">        <span class="variable language_">self</span>.titlestr=<span class="variable language_">self</span>.content2.text()</span><br><span class="line">        <span class="variable language_">self</span>.music=<span class="variable language_">self</span>.content3.currentIndex()</span><br><span class="line">        <span class="variable language_">self</span>.close()</span><br></pre></td></tr></table></figure>
<h2 id="按钮绑定函数"><a href="#按钮绑定函数" class="headerlink" title="按钮绑定函数"></a>按钮绑定函数</h2><p>接着，给刚才两个按钮创建并绑定函数。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">onNewCountDown</span>():</span><br><span class="line">    <span class="keyword">global</span> countDownList</span><br><span class="line">    countDownEdit=CountDownEdit(<span class="number">0</span>,<span class="string">&#x27;未命名&#x27;</span>,<span class="number">0</span>)</span><br><span class="line">    countDownEdit.editData()</span><br><span class="line">    <span class="keyword">if</span> countDownEdit.confirmed:</span><br><span class="line">        countDown=CountDown(countDownScrollAreaWidget,countDownEdit.length,countDownEdit.titlestr,countDownEdit.music)</span><br><span class="line">        countDown.launch()</span><br><span class="line">        countDown.show()</span><br><span class="line">        countDownList.append(countDown)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">onDeleteCountDown</span>():</span><br><span class="line">    <span class="keyword">global</span> countDownList</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> countDownList:</span><br><span class="line">        i.toggleMode()</span><br><span class="line">newCountDown.clicked.connect(onNewCountDown)</span><br><span class="line">deleteCountDown.clicked.connect(onDeleteCountDown)</span><br></pre></td></tr></table></figure>
<h2 id="更新显示-2"><a href="#更新显示-2" class="headerlink" title="更新显示"></a>更新显示</h2><p>没错，又要更新</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># def update():</span></span><br><span class="line">	size1_3=widgetslist[<span class="number">2</span>].size()</span><br><span class="line">    size8=newCountDown.size()</span><br><span class="line">    size9=deleteCountDown.size()</span><br><span class="line">    newCountDown.move(size1_3.width()/<span class="number">2</span>-<span class="number">5</span>-size8.width(),size1_3.height()-<span class="number">10</span>-size8.height())</span><br><span class="line">    deleteCountDown.move(size1_3.width()/<span class="number">2</span>+<span class="number">5</span>,size1_3.height()-<span class="number">10</span>-size9.height())</span><br><span class="line">    countDownScrollArea.resize(size1_3.width()-<span class="number">20</span>,size1_3.height()-<span class="number">50</span>-size8.height())</span><br><span class="line">    size10=countDownScrollArea.size()</span><br><span class="line">    size11=QSize(<span class="number">400</span>,<span class="number">300</span>)</span><br><span class="line">    numPerRow=(size10.width()-size11.width())//(size11.width()+<span class="number">10</span>)+<span class="number">1</span></span><br><span class="line">    widthPerRow=numPerRow*size11.width()+(numPerRow-<span class="number">1</span>)*<span class="number">10</span></span><br><span class="line">    countDownScrollAreaWidget.resize(size10.width(),<span class="number">10</span>+((<span class="built_in">len</span>(countDownList))//numPerRow+<span class="number">1</span>)*(<span class="number">10</span>+size11.height()))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(countDownList)):</span><br><span class="line">        countDownList[i].move(size10.width()/<span class="number">2</span>-widthPerRow/<span class="number">2</span>+(i%numPerRow)*(<span class="number">10</span>+size11.width()),<span class="number">10</span>+(i//numPerRow)*(<span class="number">10</span>+size11.height()))</span><br><span class="line">        countDownList[i].updating()</span><br></pre></td></tr></table></figure>
<h2 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h2><p>这个时钟应用还是支持保存和读取计时器的。实现就是文件读写。</p>
<h3 id="读入"><a href="#读入" class="headerlink" title="读入"></a>读入</h3><p>这个是程序每次打开就执行的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># deleteCountDown.clicked.connect(onDeleteCountDown)</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;../data/countdown.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">        timelength,title,music=i.split(<span class="string">&#x27;:/:&#x27;</span>)</span><br><span class="line">        countDown=CountDown(countDownScrollAreaWidget,<span class="built_in">int</span>(timelength),title,<span class="built_in">int</span>(music))</span><br><span class="line">        countDown.launch()</span><br><span class="line">        countDown.show()</span><br><span class="line">        countDownList.append(countDown)</span><br><span class="line"></span><br><span class="line"><span class="comment"># def update():</span></span><br></pre></td></tr></table></figure>
<h3 id="保存"><a href="#保存" class="headerlink" title="保存"></a>保存</h3><p>这个就是程序每次关闭执行的。<br>让我们回到程序一开始：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Window(QWidget):</span></span><br><span class="line">	<span class="keyword">def</span> <span class="title function_">closeEvent</span>(<span class="params">self,event</span>):</span><br><span class="line">        <span class="keyword">global</span> countDownList,alarmList</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;../data/countdown.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> countDownList:</span><br><span class="line">                f.write(<span class="built_in">str</span>(i.timelength)+<span class="string">&#x27;:/:&#x27;</span>+i.titlestr+<span class="string">&#x27;:/:&#x27;</span>+<span class="built_in">str</span>(i.music)+<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="效果-2"><a href="#效果-2" class="headerlink" title="效果"></a>效果</h2><p><img src="https://s1.imagehub.cc/images/2024/12/08/62420788b13c81e6b3003003d2816649.png" alt="image"></p>
<h1 id="闹钟"><a href="#闹钟" class="headerlink" title="闹钟"></a>闹钟</h1><p>闹钟的程序，就是把倒计时复制了一遍改的，所以直接给个代码</p>
<h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">newAlarm=QPushButton(<span class="string">&#x27;新建&#x27;</span>,widgetslist[<span class="number">3</span>])</span><br><span class="line">deleteAlarm=QPushButton(<span class="string">&#x27;编辑&#x27;</span>,widgetslist[<span class="number">3</span>])</span><br><span class="line">alarmScrollArea=QScrollArea(widgetslist[<span class="number">3</span>])</span><br><span class="line">alarmScrollArea.move(<span class="number">10</span>,<span class="number">30</span>)</span><br><span class="line">alarmScrollArea.setHorizontalScrollBarPolicy(Qt.ScrollBarAlwaysOff)</span><br><span class="line">alarmScrollAreaWidget=QWidget()</span><br><span class="line">alarmScrollArea.setWidget(alarmScrollAreaWidget)</span><br><span class="line">alarmList=[]</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Alarm</span>(<span class="title class_ inherited__">QGroupBox</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,parent,timelength,title,music,repeat,description,running</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(parent)</span><br><span class="line">        <span class="variable language_">self</span>.timelength=timelength</span><br><span class="line">        <span class="variable language_">self</span>.titlestr=title</span><br><span class="line">        <span class="variable language_">self</span>.music=music</span><br><span class="line">        <span class="variable language_">self</span>.running=running</span><br><span class="line">        <span class="variable language_">self</span>.repeat=repeat</span><br><span class="line">        <span class="variable language_">self</span>.description=description</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">launch</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.resize(<span class="number">400</span>,<span class="number">300</span>)</span><br><span class="line">        <span class="variable language_">self</span>.restTime=<span class="variable language_">self</span>.timelength</span><br><span class="line">        <span class="variable language_">self</span>.timelabel=QLabel(formatTime(<span class="variable language_">self</span>.restTime,<span class="built_in">round</span>=<span class="literal">True</span>),<span class="variable language_">self</span>)</span><br><span class="line">        font=QFont(<span class="string">&#x27;Arian&#x27;</span>,<span class="number">40</span>,<span class="number">10</span>)</span><br><span class="line">        <span class="variable language_">self</span>.timelabel.setFont(font)</span><br><span class="line">        <span class="variable language_">self</span>.descriptionLabel=QLabel(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.descriptionLabel.setWordWrap(<span class="literal">True</span>)</span><br><span class="line">        <span class="variable language_">self</span>.descriptionLabel.setAlignment(Qt.AlignmentFlag.AlignTop|Qt.AlignmentFlag.AlignLeft)</span><br><span class="line">        <span class="variable language_">self</span>.repetitionLabel=QLabel(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.startStopButton=QPushButton(<span class="string">&#x27;关闭&#x27;</span> <span class="keyword">if</span> <span class="variable language_">self</span>.running <span class="keyword">else</span> <span class="string">&#x27;开启&#x27;</span>,<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.startStopButton.clicked.connect(<span class="variable language_">self</span>.startStop)</span><br><span class="line">        <span class="variable language_">self</span>.editButton=<span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.deleteButton=<span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.mode=<span class="literal">True</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">toggleMode</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.mode:</span><br><span class="line">            <span class="variable language_">self</span>.startStopButton.hide()</span><br><span class="line">            <span class="variable language_">self</span>.editButton=QPushButton(<span class="string">&#x27;编辑&#x27;</span>,<span class="variable language_">self</span>)</span><br><span class="line">            <span class="variable language_">self</span>.editButton.clicked.connect(<span class="variable language_">self</span>.edit)</span><br><span class="line">            <span class="variable language_">self</span>.editButton.show()</span><br><span class="line">            <span class="variable language_">self</span>.deleteButton=QPushButton(<span class="string">&#x27;删除&#x27;</span>,<span class="variable language_">self</span>)</span><br><span class="line">            <span class="variable language_">self</span>.deleteButton.clicked.connect(<span class="variable language_">self</span>.deleteSelf)</span><br><span class="line">            <span class="variable language_">self</span>.deleteButton.show()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.startStopButton.show()</span><br><span class="line">            <span class="variable language_">self</span>.editButton.hide()</span><br><span class="line">            <span class="variable language_">self</span>.editButton=<span class="literal">None</span></span><br><span class="line">            <span class="variable language_">self</span>.deleteButton.hide()</span><br><span class="line">            <span class="variable language_">self</span>.deleteButton=<span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.mode=<span class="keyword">not</span> <span class="variable language_">self</span>.mode</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">updating</span>(<span class="params">self</span>):</span><br><span class="line">        hours,minutes,seconds=<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,time.strftime(<span class="string">&#x27;%H %M %S&#x27;</span>).split()))</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">abs</span>(<span class="variable language_">self</span>.timelength-(hours*<span class="number">3600</span>+minutes*<span class="number">60</span>+seconds))&lt;<span class="number">0.0005</span> <span class="keyword">and</span> <span class="variable language_">self</span>.running:</span><br><span class="line">            <span class="variable language_">self</span>.showMessage()</span><br><span class="line">            <span class="variable language_">self</span>.startStop()</span><br><span class="line">        <span class="variable language_">self</span>.setTitle(<span class="variable language_">self</span>.titlestr)</span><br><span class="line">        selfsize=<span class="variable language_">self</span>.size()</span><br><span class="line">        buttonsize=<span class="variable language_">self</span>.startStopButton.size()</span><br><span class="line">        <span class="variable language_">self</span>.timelabel.setText(formatTime(<span class="variable language_">self</span>.timelength,<span class="built_in">round</span>=<span class="literal">True</span>))</span><br><span class="line">        labelsize=<span class="variable language_">self</span>.timelabel.size()</span><br><span class="line">        <span class="variable language_">self</span>.timelabel.move(selfsize.width()/<span class="number">2</span>-labelsize.width()/<span class="number">2</span>,<span class="number">30</span>)</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.descriptionLabel.setText(<span class="variable language_">self</span>.description)</span><br><span class="line">        <span class="variable language_">self</span>.descriptionLabel.setFixedSize(selfsize.width()-<span class="number">10</span>,<span class="number">200</span>)</span><br><span class="line">        labelsize=<span class="variable language_">self</span>.descriptionLabel.size()</span><br><span class="line">        <span class="variable language_">self</span>.descriptionLabel.move(selfsize.width()/<span class="number">2</span>-labelsize.width()/<span class="number">2</span>,<span class="number">150</span>)</span><br><span class="line">        text=[<span class="string">&#x27;星期一&#x27;</span>,<span class="string">&#x27;星期二&#x27;</span>,<span class="string">&#x27;星期三&#x27;</span>,<span class="string">&#x27;星期四&#x27;</span>,<span class="string">&#x27;星期五&#x27;</span>,<span class="string">&#x27;星期六&#x27;</span>,<span class="string">&#x27;星期日&#x27;</span>]</span><br><span class="line">        list1=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):</span><br><span class="line">            <span class="keyword">if</span> <span class="variable language_">self</span>.repeat[i]:</span><br><span class="line">                list1.append(text[i])</span><br><span class="line">        <span class="variable language_">self</span>.repetitionLabel.setText(<span class="string">&#x27;，&#x27;</span>.join(list1))</span><br><span class="line">        <span class="variable language_">self</span>.repetitionLabel.setFixedSize(selfsize.width()-<span class="number">10</span>,<span class="number">20</span>)</span><br><span class="line">        labelsize=<span class="variable language_">self</span>.repetitionLabel.size()</span><br><span class="line">        <span class="variable language_">self</span>.repetitionLabel.move(selfsize.width()/<span class="number">2</span>-labelsize.width()/<span class="number">2</span>,<span class="number">100</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.mode:</span><br><span class="line">            <span class="variable language_">self</span>.startStopButton.move(selfsize.width()/<span class="number">2</span>-buttonsize.width()/<span class="number">2</span>,selfsize.height()-<span class="number">10</span>-buttonsize.height())</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.editButton.move(selfsize.width()/<span class="number">2</span>-<span class="number">5</span>-buttonsize.width(),selfsize.height()-<span class="number">10</span>-buttonsize.height())</span><br><span class="line">            <span class="variable language_">self</span>.deleteButton.move(selfsize.width()/<span class="number">2</span>+<span class="number">5</span>,selfsize.height()-<span class="number">10</span>-buttonsize.height())</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">startStop</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.running:</span><br><span class="line">            <span class="variable language_">self</span>.startStopButton.setText(<span class="string">&#x27;开启&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="variable language_">self</span>.startStopButton.setText(<span class="string">&#x27;关闭&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.running=<span class="keyword">not</span> <span class="variable language_">self</span>.running</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">edit</span>(<span class="params">self</span>):</span><br><span class="line">        editor=AlarmEdit(<span class="variable language_">self</span>.timelength,<span class="variable language_">self</span>.titlestr,<span class="variable language_">self</span>.music,<span class="variable language_">self</span>.repeat,<span class="variable language_">self</span>.description,<span class="variable language_">self</span>.running)</span><br><span class="line">        editor.editData()</span><br><span class="line">        <span class="variable language_">self</span>.timelength=editor.length</span><br><span class="line">        <span class="variable language_">self</span>.restTime=<span class="variable language_">self</span>.timelength</span><br><span class="line">        <span class="variable language_">self</span>.titlestr=editor.titlestr</span><br><span class="line">        <span class="variable language_">self</span>.music=editor.music</span><br><span class="line">        <span class="variable language_">self</span>.repeat=editor.repeat</span><br><span class="line">        <span class="variable language_">self</span>.description=editor.description</span><br><span class="line">        <span class="variable language_">self</span>.running=editor.running</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">showMessage</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.trayicon=QSystemTrayIcon()</span><br><span class="line">        <span class="variable language_">self</span>.trayicon.setIcon(icon)</span><br><span class="line">        <span class="variable language_">self</span>.trayicon.show()</span><br><span class="line">        <span class="variable language_">self</span>.trayicon.showMessage(<span class="string">&#x27;闹钟&#x27;</span>+formatTime(<span class="variable language_">self</span>.timelength,<span class="built_in">round</span>=<span class="literal">True</span>),<span class="variable language_">self</span>.description,icon)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">deleteSelf</span>(<span class="params">self</span>):</span><br><span class="line">        alarmList.remove(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.deleteLater()</span><br><span class="line">        <span class="keyword">del</span> <span class="variable language_">self</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AlarmEdit</span>(<span class="title class_ inherited__">QDialog</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,length,title,music,repeat,description,running</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        <span class="variable language_">self</span>.confirmed=<span class="literal">False</span></span><br><span class="line">        <span class="variable language_">self</span>.length=length</span><br><span class="line">        <span class="variable language_">self</span>.titlestr=title</span><br><span class="line">        <span class="variable language_">self</span>.music=music</span><br><span class="line">        <span class="variable language_">self</span>.repeat=repeat</span><br><span class="line">        <span class="variable language_">self</span>.description=description</span><br><span class="line">        <span class="variable language_">self</span>.running=running</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">editData</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.setWindowTitle(<span class="string">&#x27;闹钟编辑&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.vlayout=QVBoxLayout()</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout=QGridLayout()</span><br><span class="line">        <span class="variable language_">self</span>.hlayout=QHBoxLayout()</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.setSpacing(<span class="number">10</span>)</span><br><span class="line">        <span class="variable language_">self</span>.label1=QLabel(<span class="string">&#x27;时间&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.label2=QLabel(<span class="string">&#x27;标题&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.label3=QLabel(<span class="string">&#x27;音乐&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.label4=QLabel(<span class="string">&#x27;描述&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.label5=QLabel(<span class="string">&#x27;重复&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1=QHBoxLayout()</span><br><span class="line">        <span class="variable language_">self</span>.content1_1=QSpinBox()</span><br><span class="line">        <span class="variable language_">self</span>.content1_1.setMinimum(<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_1.setMaximum(<span class="number">23</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_1.setValue(<span class="variable language_">self</span>.length//<span class="number">3600</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_2=QLabel(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_3=QSpinBox()</span><br><span class="line">        <span class="variable language_">self</span>.content1_3.setMinimum(<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_3.setMaximum(<span class="number">59</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_3.setValue((<span class="variable language_">self</span>.length%<span class="number">3600</span>)//<span class="number">60</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_4=QLabel(<span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_5=QSpinBox()</span><br><span class="line">        <span class="variable language_">self</span>.content1_5.setMinimum(<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_5.setMaximum(<span class="number">59</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1_5.setValue(<span class="variable language_">self</span>.length%<span class="number">60</span>)</span><br><span class="line">        <span class="variable language_">self</span>.content1.addWidget(<span class="variable language_">self</span>.content1_1)</span><br><span class="line">        <span class="variable language_">self</span>.content1.addWidget(<span class="variable language_">self</span>.content1_2)</span><br><span class="line">        <span class="variable language_">self</span>.content1.addWidget(<span class="variable language_">self</span>.content1_3)</span><br><span class="line">        <span class="variable language_">self</span>.content1.addWidget(<span class="variable language_">self</span>.content1_4)</span><br><span class="line">        <span class="variable language_">self</span>.content1.addWidget(<span class="variable language_">self</span>.content1_5)</span><br><span class="line">        <span class="variable language_">self</span>.content2=QLineEdit()</span><br><span class="line">        <span class="variable language_">self</span>.content2.setText(<span class="variable language_">self</span>.titlestr)</span><br><span class="line">        <span class="variable language_">self</span>.content3=QComboBox()</span><br><span class="line">        <span class="variable language_">self</span>.content3.addItems(musicNameList)</span><br><span class="line">        <span class="variable language_">self</span>.content3.setCurrentIndex(<span class="variable language_">self</span>.music)</span><br><span class="line">        <span class="variable language_">self</span>.content4=QLineEdit()</span><br><span class="line">        <span class="variable language_">self</span>.content4.setText(<span class="variable language_">self</span>.description)</span><br><span class="line">        <span class="variable language_">self</span>.content5=QVBoxLayout()</span><br><span class="line">        text=[<span class="string">&#x27;星期一&#x27;</span>,<span class="string">&#x27;星期二&#x27;</span>,<span class="string">&#x27;星期三&#x27;</span>,<span class="string">&#x27;星期四&#x27;</span>,<span class="string">&#x27;星期五&#x27;</span>,<span class="string">&#x27;星期六&#x27;</span>,<span class="string">&#x27;星期日&#x27;</span>]</span><br><span class="line">        <span class="variable language_">self</span>.content5s=[QCheckBox(text=i) <span class="keyword">for</span> i <span class="keyword">in</span> text]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable language_">self</span>.content5s:</span><br><span class="line">            <span class="variable language_">self</span>.content5.addWidget(i)</span><br><span class="line">            p=<span class="variable language_">self</span>.content5s.index(i)</span><br><span class="line">            i.setChecked(<span class="variable language_">self</span>.repeat[p])</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.label1,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.label2,<span class="number">1</span>,<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.label3,<span class="number">2</span>,<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.label4,<span class="number">3</span>,<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.label5,<span class="number">4</span>,<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addLayout(<span class="variable language_">self</span>.content1,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.content2,<span class="number">1</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.content3,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addWidget(<span class="variable language_">self</span>.content4,<span class="number">3</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">self</span>.gridlayout.addLayout(<span class="variable language_">self</span>.content5,<span class="number">4</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="variable language_">self</span>.confirm=QPushButton(<span class="string">&#x27;确定&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.cancel=QPushButton(<span class="string">&#x27;取消&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.confirm.clicked.connect(<span class="variable language_">self</span>.confirming)</span><br><span class="line">        <span class="variable language_">self</span>.cancel.clicked.connect(<span class="variable language_">self</span>.close)</span><br><span class="line">        <span class="variable language_">self</span>.hlayout.addWidget(<span class="variable language_">self</span>.confirm)</span><br><span class="line">        <span class="variable language_">self</span>.hlayout.addWidget(<span class="variable language_">self</span>.cancel)</span><br><span class="line">        <span class="variable language_">self</span>.vlayout.addLayout(<span class="variable language_">self</span>.gridlayout)</span><br><span class="line">        <span class="variable language_">self</span>.vlayout.addLayout(<span class="variable language_">self</span>.hlayout)</span><br><span class="line">        <span class="variable language_">self</span>.setLayout(<span class="variable language_">self</span>.vlayout)</span><br><span class="line">        <span class="variable language_">self</span>.show()</span><br><span class="line">        <span class="variable language_">self</span>.<span class="built_in">exec</span>()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">setRepeat</span>(<span class="params">self,p</span>):</span><br><span class="line">        <span class="variable language_">self</span>.repeat[p]=<span class="keyword">not</span> <span class="variable language_">self</span>.repeat[p]</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">confirming</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.confirmed=<span class="literal">True</span></span><br><span class="line">        <span class="variable language_">self</span>.length=<span class="variable language_">self</span>.content1_1.value()*<span class="number">3600</span>+<span class="variable language_">self</span>.content1_3.value()*<span class="number">60</span>+<span class="variable language_">self</span>.content1_5.value()</span><br><span class="line">        <span class="variable language_">self</span>.titlestr=<span class="variable language_">self</span>.content2.text()</span><br><span class="line">        <span class="variable language_">self</span>.music=<span class="variable language_">self</span>.content3.currentIndex()</span><br><span class="line">        <span class="variable language_">self</span>.description=<span class="variable language_">self</span>.content4.text()</span><br><span class="line">        <span class="variable language_">self</span>.repeat=[i.isChecked() <span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable language_">self</span>.content5s]</span><br><span class="line">        <span class="variable language_">self</span>.close()</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">onNewAlarm</span>():</span><br><span class="line">    <span class="keyword">global</span> alarmList</span><br><span class="line">    alarmEdit=AlarmEdit(<span class="number">0</span>,<span class="string">&#x27;未命名&#x27;</span>,<span class="number">0</span>,[<span class="literal">False</span>,<span class="literal">False</span>,<span class="literal">False</span>,<span class="literal">False</span>,<span class="literal">False</span>,<span class="literal">False</span>,<span class="literal">False</span>],<span class="string">&#x27;&#x27;</span>,<span class="literal">True</span>)</span><br><span class="line">    alarmEdit.editData()</span><br><span class="line">    <span class="keyword">if</span> alarmEdit.confirmed:</span><br><span class="line">        alarm=Alarm(alarmScrollAreaWidget,alarmEdit.length,alarmEdit.titlestr,alarmEdit.music,alarmEdit.repeat,alarmEdit.description,alarmEdit.running)</span><br><span class="line">        alarm.launch()</span><br><span class="line">        alarm.show()</span><br><span class="line">        alarmList.append(alarm)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">onDeleteAlarm</span>():</span><br><span class="line">    <span class="keyword">global</span> alarmList</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> alarmList:</span><br><span class="line">        i.toggleMode()</span><br><span class="line">newAlarm.clicked.connect(onNewAlarm)</span><br><span class="line">deleteAlarm.clicked.connect(onDeleteAlarm)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;../data/alarm.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> f.readlines():</span><br><span class="line">        timelength,title,music,repeat1,repeat2,repeat3,repeat4,repeat5,repeat6,repeat7,description,running1=i.split(<span class="string">&#x27;:/:&#x27;</span>)</span><br><span class="line">        alarm=Alarm(alarmScrollAreaWidget,<span class="built_in">int</span>(timelength),title,<span class="built_in">int</span>(music),<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">bool</span>,<span class="built_in">map</span>(<span class="built_in">int</span>,[repeat1,repeat2,repeat3,repeat4,repeat5,repeat6,repeat7]))),description,<span class="built_in">bool</span>(<span class="built_in">int</span>(running1)))</span><br><span class="line">        alarm.launch()</span><br><span class="line">        alarm.show()</span><br><span class="line">        alarmList.append(alarm)</span><br></pre></td></tr></table></figure>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>别忘了还需要更新显示，关闭时的文件写入</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># update():</span></span><br><span class="line">    size8=newAlarm.size()</span><br><span class="line">    size9=deleteAlarm.size()</span><br><span class="line">    newAlarm.move(size1_3.width()/<span class="number">2</span>-<span class="number">5</span>-size8.width(),size1_3.height()-<span class="number">10</span>-size8.height())</span><br><span class="line">    deleteAlarm.move(size1_3.width()/<span class="number">2</span>+<span class="number">5</span>,size1_3.height()-<span class="number">10</span>-size9.height())</span><br><span class="line">    alarmScrollArea.resize(size1_3.width()-<span class="number">20</span>,size1_3.height()-<span class="number">50</span>-size8.height())</span><br><span class="line">    size10=alarmScrollArea.size()</span><br><span class="line">    size11=QSize(<span class="number">400</span>,<span class="number">300</span>)</span><br><span class="line">    numPerRow=(size10.width()-size11.width())//(size11.width()+<span class="number">10</span>)+<span class="number">1</span></span><br><span class="line">    widthPerRow=numPerRow*size11.width()+(numPerRow-<span class="number">1</span>)*<span class="number">10</span></span><br><span class="line">    alarmScrollAreaWidget.resize(size10.width(),<span class="number">10</span>+((<span class="built_in">len</span>(alarmList))//numPerRow+<span class="number">1</span>)*(<span class="number">10</span>+size11.height()))</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(alarmList)):</span><br><span class="line">        alarmList[i].move(size10.width()/<span class="number">2</span>-widthPerRow/<span class="number">2</span>+(i%numPerRow)*(<span class="number">10</span>+size11.width()),<span class="number">10</span>+(i//numPerRow)*(<span class="number">10</span>+size11.height()))</span><br><span class="line">        alarmList[i].updating()</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># class Window(QWidget):</span></span><br><span class="line">	<span class="comment"># def closeEvent(self,event):</span></span><br><span class="line">		<span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;../data/alarm.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> alarmList:</span><br><span class="line">                f.write(<span class="built_in">str</span>(i.timelength)+<span class="string">&#x27;:/:&#x27;</span>+i.titlestr+<span class="string">&#x27;:/:&#x27;</span>+<span class="built_in">str</span>(i.music)+<span class="string">&#x27;:/:&#x27;</span>+<span class="string">&#x27;:/:&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>,<span class="built_in">map</span>(<span class="built_in">int</span>,i.repeat)))+<span class="string">&#x27;:/:&#x27;</span>+i.description+<span class="string">&#x27;:/:&#x27;</span>+<span class="built_in">str</span>(<span class="built_in">int</span>(i.running))+<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure>
<h2 id="效果-3"><a href="#效果-3" class="headerlink" title="效果"></a>效果</h2><p><img src="https://s1.imagehub.cc/images/2024/12/08/8d9a81c4e9e72270e372cba66f1ba9ba.png" alt="image"></p>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>这个项目，虽然简单，但是代码有亿点点多。所以写这篇文章也写了很多。希望这个项目可以对学习Qt的小伙伴起到一些引导性作用。<br>其实，写这么长真的很不容易。<br>拜拜！See you next time!</p>
]]></content>
      <categories>
        <category>应用程序</category>
        <category>Qt</category>
      </categories>
      <tags>
        <tag>应用程序</tag>
        <tag>简易</tag>
      </tags>
  </entry>
</search>
